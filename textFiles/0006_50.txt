Executive ÊSummary Ê
Information Êhas Êbeen Êincreasing Êsince Êthe Êbirth Êof Êtechnology, Êhence Êit Êis Ê
getting Ê difficult Ê to Ê analyze Ê and Ê understand Ê all Ê the Ê information Ê we Ê have. Ê
Information Êis Êincreasing Êrapidly Êwhereas Êthe Êmethods Êto Êvisualize Êthe Êdata Ê
have Ênot Êchanged Êas Êoften. ÊThus Êresearchers Êare Êfaced Êwith Êa Êproblem, Êas Êthey Ê
cannot Êanalyze Êsuch Êan Êamount Êof Êdata, Êif Êit Êis Ênot Êrepresented Êco Êrrectly.
Visualizing Êdata Êin Êa Êmanner Êthat Êis Êscalable Êhas Êalways Êbeen Êa Êchallenge Êin Ê
the Êfiled Êof Êcomputer Êscience. ÊThe ÊInternet Êand Êbiology Êare Êtwo Êsm ourc ain Ê es Ê
of Êrapid Êincrease Êin Êinformation, Êin Êthis Êproject ÊI Êam Êtrying Êto Êunderstand Êthe Ê
current Êmethods Êof Êvisualizations Êand Êchanging Êthem Êto Êfit Êan Êenvironments Ê
in Êwhich Êdata Êis Êexpanded Êvery Êrapidly Êwhich Êmakes Êit Êvery Êinteresting Êas Ê
well Êas Êchallenging . Ê
In Êthis Êproject ÊI Êam Êtrying Êto Êsolve Êthis Êproblem Êusing Êdata Êvisualization Êas Êthe Ê
best Ê way Ê to Ê show Ê any Ê information Ê is Ê through Ê visual Ê means; Ê that Ê is Ê my Ê
approach Êto Êthis Êproblem. ÊHumans Êare Ênaturally Êgood Êat Êdetecting Êpatterns Ê
and Êgiving Êa Êgraphical Êrepres entation Êof Êthe Êdata Êwould Êallow Êthem Êto Êmake Ê
observations Êwhich Êwere Ênot Êpossible Êusing Êprevious Êapproac Êhes.
To Êsolve Êthe Êproblem ÊI Êhave Êused Êa Êtechnique Êto Êdynamically Êgenerate Êgraphs Ê
and Êto Êshow Êthe Êdata Êin Êan Êelegant Êmanner, Êas Êthe Êdata Êto Êbe Êshothe Ê wn Êon Ê
graph Êincreases Êthe Êprevious Êvalues Êare Êmoved Êin Êorder Êto Êgive Êpriority Êto Êthe Ê
new Êdata. ÊThis Êtechnique Êis Êbeing Êused Êto Êdisplay Êtrees Êwith Êa Êhuge Ênumber Êof Ê
nodes. ÊThis Êtechnique Êis Ênot Êaffected Êby Êthe Êincrease Êin Êthe Êamount Êof Êdata Ê
and Êhence Êa Êsoundp Êaproach Êto Êthe Êproblem Ê.
This Êtechnique Êmainly Êfocuses Êon Êtrees Êbut Êit Êcan Êbe Êapplied Êto Êdisplay Êvast Ê
numbers Ê of Ê data Ê types. Ê This Ê method Ê uses Ê similar Ê but Ê richer Ê Êm and ore Ê
dynamic Êvisualization, Êthan Êvisualization Êmethods Êcurrently Êused, Êand Êallows Ê
users Ê to Ê v iew Ê data Ê in Ê a Ê more Ê appropriate Ê manner Ê without Ê having Ê to Ê
understand Êthe Ênew Êsystem Ê.
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 ÊAcknowledgements Ê
 Ê
This Êproject Êwould Ênot Êhave Êbeen Êpossible Êwithout Êsupport Êof ÊJulian ÊGough, Ê
his Êadvice Êand Êguidance Êwas Êvery Êimportant Êto Êthe Êpro Êject.
 Ê
I Ê would Ê also Êlike Ê to Ê thank Ê Matt Ê Oates, Ê his feed Ê back; Ê guidance Êand Ê
encouragement Êhelped Ême Êa Êlot Êduring Êthe Êpro Êject.
 Ê
Thanks Êto Êmy Êfriends Êfor Êtheir Êsupport Êand Êadvice Êduring Êthis Êp Êroject.
 Ê
I Êwould Êlike Êto Êthank Êmy Êfamily Êand Êmy Êgirl Êfriend Êfor Êalways Êsupporting Ême Ê
and Êbelieving Êin Ême. Ê
 Ê Ê
Table Êof ÊContent Ês
Introduction	 Ê........................................................................................................................	 Ê3	 Ê
Goal	 Ê........................................................................................................................................	 Ê4	 Ê
Goal	 Êof	 Êthe	 Êproje	 Ê................................ ct ......................................................................................	 Ê4	 Ê
Features	 Êand	 Êbenefit	 Ê................................ s ................................................................................	 Ê4	 Ê
Background	 Êand	 ÊMotivatio	 Ên..........................................................................................	 Ê4	 Ê
Setting	 Êand	 ÊHistor	 Ê................................ y .....................................................................................	 Ê4	 Ê
Bioinformatics	 Ê....................................................................................................................	 Ê4	 Ê
HTML	 Ê.....................................................................................................................................	 Ê5	 Ê
AJAX	 Ê.......................................................................................................................................	 Ê6	 Ê
Web	 ÊService	 Ê.........................................................................................................................	 Ê6	 Ê
XML	 Ê..................................................................................................................................................	 Ê7	 Ê
WSDL	 Ê...............................................................................................................................................	 Ê7	 Ê
UDDI	 Ê................................................................................................................................................	 Ê7	 Ê
Types	 Êof	 ÊWeb	 ÊServi	 Êc................................ e ................................................................................	 Ê8	 Ê
SOAP	 Ê..............................................................................................................................................................	 Ê8	 Ê
The	 Êrequest	 Ê:...............................................................................................................................................	 Ê9	 Ê
The	 Êresponse	 Ê................................ : ............................................................................................................	 Ê9	 Ê
REST	 Ê............................................................................................................................................................	 Ê10	 Ê
The	 Êrequest	 Ê:.............................................................................................................................................	 Ê10	 Ê
The	 Êresponse	 Ê................................ : ..........................................................................................................	 Ê10	 Ê
Benefits	 Ê.......................................................................................................................................	 Ê10	 Ê
Data	 ÊVisualization	 Ê...........................................................................................................	 Ê11	 Ê
JavaScript	 ÊInfoVis	 ÊToolk	 Êit .....................................................................................................	 Ê13	 Ê
Protovis	 Ê.......................................................................................................................................	 Ê14	 Ê
SUPERFAMILY	 ÊDatabase	 Ê...............................................................................................	 Ê14	 Ê
Web	 ÊServices	 Êin	 ÊBio	 ÊInformat	 Êi................................ cs ................................................	 Ê15	 Ê
Web	 ÊServices	 Ê&	 ÊSUPERFAMILY	 ÊDataba	 Ê................................ se ................................	 Ê15	 Ê
Current	 ÊProjects	 Ê..............................................................................................................	 Ê16	 Ê
my
Grid	 Êproject	 Ê............................................................................................................................	 Ê16	 Ê
Problem	 ÊStatement	 Ê.................................................................................................................	 Ê18	 Ê
Initial	 ÊBusiness	 ÊCas	 Ê................................ e ...............................................................................	 Ê19	 Ê
How	 Êis	 Êthis	 Êdifferen	 Ê................................ t? .............................................................................	 Ê20	 Ê
Proposed	 ÊSolution	 Ê...........................................................................................................	 Ê20	 Ê
Data	 Êacquisition	 Ê.......................................................................................................................	 Ê21	 Ê
Data	 Êmapping	 Ê............................................................................................................................	 Ê21	 Ê
Rendering	 Ê...................................................................................................................................	 Ê21	 Ê
Technology	 Ê........................................................................................................................	 Ê23	 Ê
Major	 ÊTools	 Ê................................................................................................................................	 Ê23	 Ê
Target	 ÊPlatform	 Ê................................ : .......................................................................................	 Ê24	 Ê
Basic	 Êdesign	 Ê.......................................................................................................................	 Ê24	 Ê
Non-??functional	 ÊRequirements	 Ê....................................................................................	 Ê25	 Ê
Initial	 ÊUse	 ÊCase 	 Ê.................................................................................................................	 Ê25	 Ê
 Ê Ê
Detailed	 ÊUse	 ÊCase 	 Ê............................................................................................................	 Ê26	 Ê
Class	 ÊDiagram	 Ê...................................................................................................................	 Ê27	 Ê
Sequence	 ÊDiagrams	 Ê........................................................................................................	 Ê29	 Ê
Statistics	 Êof	 ÊGenom	 Ê................................ e ................................................................................	 Ê29	 Ê
Children	 Êby	 ÊNodeI	 ÊD .................................................................................................................	 Ê30	 Ê
System	 ÊArchitecture	 ÊDiagram 	 Ê.....................................................................................	 Ê31	 Ê
Deployment	 ÊDiagram	 Ê.....................................................................................................	 Ê32	 Ê
Database	 ÊSchema	 Ê:...........................................................................................................	 Ê33	 Ê
Entity-??Relationship	 ÊModel	 Ê:..................................................................................................	 Ê33	 Ê
Guidelines,	 ÊStandards	 Ê&Templates 	 Ê 	 Ê..........................................................................	 Ê34	 Ê
Coding	 ÊStandards	 Ê.....................................................................................................................	 Ê34	 Ê
Data	 ÊNaming	 ÊStandard	 Ê................................ s .........................................................................	 Ê34	 Ê
Development	 ÊTool	 ÊStandard	 Ê................................ s ..............................................................	 Ê34	 Ê
Documentation	 ÊStandards	 Ê....................................................................................................	 Ê34	 Ê
Testing	 Ê................................................................................................................................	 Ê35	 Ê
Unit	 ÊTesting	 Ê...............................................................................................................................	 Ê35	 Ê
Results	 Ê.................................................................................................................................	 Ê41	 Ê
Data	 ÊVisualization	 Ê...................................................................................................................	 Ê41	 Ê
Web	 ÊServices	 Ê.............................................................................................................................	 Ê47	 Ê
Request:	 Ê.....................................................................................................................................................	 Ê47	 Ê
Response	 Ê...................................................................................................................................................	 Ê47	 Ê
Critical	 ÊEvaluation	 Ê...........................................................................................................	 Ê50	 Ê
Conclusion	 Ê.........................................................................................................................	 Ê52	 Ê
Future	 ÊWork	 Ê......................................................................................................................	 Ê53	 Ê
Glossary	 Ê..............................................................................................................................	 Ê54	 Ê
References	 Ê.........................................................................................................................	 Ê55	 Ê
Appendix	 Ê............................................................................................................................	 Ê59	 Ê
Functionality	 Êavailable	 Êin	 ÊWeb	 ÊServ	 Ê................................ ice ............................................	 Ê59	 Ê
User	 ÊManua	 Ê................................ l ...............................................................................................	 Ê61	 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Introduction Ê Ê
Information Êhas Êbeen Êincreasing Êsince Êthe Êth Ê birof Êtechnology. ÊThe Êamount Êof Ê
information Êon Êthe ÊInternet Êis Êenormous When Ê . Ê scientists Êstarted Êto Êdiscover Ê
secrets Êabout Êlife Êand Êits Êbuilding Êblock Êthat Êis ÊDNA. ÊThe Êfield Êof Êbiology Ê
started Êgenerating Êa Êlot Êof Êdata. ÊNow Êwe Êhave Êhierarchies Êof Êgenom d Êeslo Êtan Ê
of Êinformation Êabout Êtheir Êsequences. ÊAs Êsuch, Êa Êlarg Êsourc e e Êof Êinformation Êis Ê
the Êonline Êresults Êof Êbiological Êexperimentatio ÊWhen n. Êthis Êmuch Êamount Êof Ê
information Ê started Ê to Ê generat, Êebiology Ê joined Ê hands Ê with Ê Information Ê
Technology Êto Êgive Êbirth Êto Êbioinformatics Ê.To Êprocess Êand Êunderstand Êthis Ê
information Ê a Ê lot Ê o Êfcomputing Êtechniques Ê such Êstatistical Ê analysis, Ê data Ê
mining Êand Êresult Êvisualization Êwere Êused Êin Êbioinformatic Ês.
 Ê
The Êrise Êin Êthe Êamount Êof Êinformation Êis Êuseful Êbut Êhas Êits Êaffec s Êwell. Ê ts ÊaNow Ê
that Ê so Ê much Ê information Ê is Ê available Ê to Ê us. Ê We Ê canÕt Ê visualize Ê that Ê
information Êcorrectly Êand Êneither Êcan Êwe Êshare Êthat Êinformation Êeffect, Êiv asely Ê
everyone Êuses Êhis Êor Êher Êown Êway Êto Êshow Êthe Êinformation. ÊThis Êproject Ê
discusses Êthe Êproblems Êhat t Êwe Êhave Êbecause Êof Êthe Êamount Êof Êinformation Ê
that Êwe Ê have Êtoday Ê.
 Ê
In Êthis Êreport Êfirst Êwe Êwill Êhave Êan Êoverview Êabout Êweb Êservices, Êhow Êthey Ê
work Ê and Ê why Ê dowe Ê Ê need Ê web Ê services Ê from Ê trhe e Êwe Ê move Ê on Ê to Ê
visualization Ê and Ê why Ê it Ê is Ê important Ê to Ê have Êlear Ê a Ê cand Ê effective Ê
visualization. ÊWe Êwill Êthan Êbriefly Êdiscuss Êthe Êfield Êof Êbioinformatics Êand Êhow Ê
Information ÊTechnology Êcontributes Êto Êthe Êfield Êof Êbiolo Êgy.
 Ê
Moreover, Êwe Êwill Êlook Êat Êsome Êof Êthe Êproblems Êthat Êexist Êbecause Êof Êthe Ê
amount Êand Êcharacterisicts Êof Êthe Êdata Êin Êthe Êfield Êof Êbiolo ÊFurt gy.her Êmore Êwe Ê
will Êsee Êhow Êa Êtechnique Êto Êvisualize Êthe Êdata Êusing ÊAJAX Êcan Êbe Êapplied Êto Ê
rectify Êthis Êproblem Ê.We Êwill Êalso Êdiscuss Êhow Êweb Êservices Êcan Êbe Êused Êto Ê
solve Êsome Êof Êproblems Êresearchers Êhave Êtod Ê Êay.
 Ê
The Êdataset Êthat ÊI Êwill Êbe Êusing Êto Êpresent Êand Êsolve Êthis Êproblem Êtishe Ê Êfrom Ê
superfamily Êdatabase Êthat Êholds Êinformatioab n Êout Êgenomes Êand Êproteins ÊI Ê .
will Êtalk Êabout Êwhy Êthis Êdataset Êis Êa Êdg Êocohoice Êfor Êthis Êproject Êfurther Êinto Ê
the Êreport Ê.
 Ê
This Êwould Êgive Êus Êa Êgood Êidea Êabout Êsome Êof Êthe Êpro Êbfac lem eds Êand Êa Ê
possible Êsolution. ÊFurther Êinto Êthe Êreport Êwe Êwill Êsee Êhow Êthis Êsystem Êhas Ê
been Êdesigned, Êimplemented Êand Êmost Êimportantly Êthe Êresults Êof Êthe Êsystem. Ê
Finally Êwe Êwill Êevaluate Êthe Êsystem Êbased Êthe Ê on Êobjectives Êand Êopinions Êof Ê
people Êabout Êthe Êsystem Ê. Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 3 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Goal Ê
Goal Êof Êthe Êprojec Êt
The Ê goal Ê of Ê the Ê project Ê is Ê to Ê improve Ê the Ê data Ê visualization Ê methods Ê
implemented Êon Êthe ÊSUPERFAMILY Êdatabase Êand Êintroduce Êweb Êservices Êso Ê
that Êthe Êdata Êcan Êbe Êretrieved Êin Êa Êstandard Êformat Ê.
Features Êand Êbenefits Ê
The Êsystem Êfeatures Êall Êthe Êrequired Êfunctions Êof Êsup the Ê erfamily Êdatabase Êto Ê
be Ê available Ê through Ê a Ê web Ê service Ê interface, Ê and Ê also Ê incorporates Ê the Ê
visualization Ê of Ê the Ê data Ê from Ê the Ê database. Ê The Ê visualization Ê l Êwil be Ê
interactive, Êinformative Êand Êwill Êchange Êand Êadapt Êaccording Êto Êusers Êneed Ê s.
Background Êand ÊMotivation Ê
Setting Êand ÊHistor Êy
Web Êservices Êare Êcommon Êand Êare Êbeing Êused Êin Êmost Êof Êthe Ênew Êsystems Ê
being Êdeveloped. ÊAmazon Êis Êalso Êone Êof Êthe Êcompanies Ê Êus it, Ê ing with Êproducts Ê
like ÊS3 Êstorage Êservice, ÊEC2 Êcompute Êcloud, Êand ÊSimpleDB Êonline Êdatabase. Ê
There Êare Êa Êlot Êof Êadvantages Êof Êusing Êweb Êservices Êas Êit Êallows Êsending Êdata Ê
in Êa Êstandard Êformat, Êallowing Êeveryone Êto Êbe Êable Êto Êuse Êit Êas Êdes Êired. Ê[1]
 Ê
If ÊI Êtlk a Êabout Êresearch Êin Êbioinformatics Êthat Êis Êthe Êcombinatio f Ên Ê bioology Ê
and ÊInformation ÊTechnology. ÊNo Êmatter Êwhere Êa Êperson Êlives, Êwhatever Êis Êhis Ê
social Êbackground, Êhe Êalways Êwants Êto Êget Êthe Êbest Êand Êcorrect Êinformation Ê
available Ê on Êthe Ê Internet Ê and Ê get Êit Ê easily[2] Ê . Current Ê methods Ê of Ê
visualizations Êare Ênot Êgood Êenough Êto Êrepresent Êthe Êdata Êin Êa Êmanner Êthat Êcan Ê
clearly Êand Êeffectively Êprovide Êthe Êinformation Êto Êthe Êus Ê er.
Bioinformatics Ê
Bioinformatics Êis Êthe Êcombination ÊoInfo f Ê rmation ÊTechnology Êwith Êbiology. ÊIt Ê
began Ê with Ê designing Ê database Ê to Ê store Ê information Ê abogut eno Ê mic Êdata, Ê
which Êwas Êproducing Êa Êlot Êoinfo f Ê rmation. ÊIt Êalso Êrequired Êthatn Ê Êint a erface Êbe Ê
provided Êwhich Êwould Êbe Êcomplex Êas Êto Êshow Êthe Êexisting Êinformation Êfrom Ê
the Êdatabase Êand Êallow Ê addition Êof Êmore Êinformation Êas Êwell Êwhich Êextended Ê
it Êto Êweb. ÊNow Êbioinformatics Êdeals Êwith Êmore Êcomplex Êthings Êthan Êjust Ê
storing Êdata Êfrom Êthe Êgenome Êrevolution, Êas Êthis Ênew Êamount Êof Êinformation Ê
is Ê huge Ê things Ê like Ê data Ê mining, Ê machine Ê learning Ê algorit s, Êhmdata Ê
visualization Êare Êalso Êrequired Êas Êvisualization Êneeds Êto Êincorporate Êthese Ê
techniques Êsuch Êas Êdata Êmining Êon Êthe Êbiological Êd Ê[36] ata. Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 4 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
HTML Ê
Hypertext ÊMarkup ÊLanguag Êeis Êa Êmarkup Êlanguage Êfor Êweb Êpag ÊA ess. ÊDNA Êis Ê
building Ê block Ê of Ê life Ê similarly Ê Êwe can Ê say Ê HTML Ê is Ê building Ê block Ê for Ê
webpages. ÊHTML Êconsists Êof Êtags Êthat Êare Êenclosed Êin Êangle Êbrac Êkets.
A Êsimple ÊHTML Êpage Êwould Êlook Êlike Êt Êhis
 Ê
<html> 
<head> 
 <title>MSc</title> 
</head> 
<body> 
Web Services and Data Visualization 
</body> 
</html> 
Listing Ê1: Êsimple ÊHTML Êpage Êwith ÊÔMScÕ Êon Êthe Êtitle Êbar Êof Êthe Êbrowser Êand ÊÔWeb ÊServices Êand ÊData Ê
VisualizationÕ Êin Êthe Êpag Êe.
HTML Êas Êseen Êin Ê Listing Ê1 Êhas Êalways Êbeen Êused Êto Êcommunicate Êbetween Ê
server Êand Êthe Êus er. ÊThe Êuser Êwould Êsubmit Êa Êform Êand Êthe Êserver Êwould Ê
respond Êto Êthe Êrequest Êof Êthe ÊusTer. Ê his Êwas Êworking Êfine Êbut Êafter Êsome Êtime Ê
users Êof Êthe Êapplication Êstarted Êcomplaining Êabout Êthe Êspeed Êof Êthe Êresponse Ê
they Êget, Êthey Êwere Ênot Êsatisfied Êwith Êthe Êres onsiv peness Êof Êthe Êserver. Ê[7] Ê
 Ê
A Êsimple ÊHTML Êform Êthat Êuser Êwould Êsubmit Êwould Êbe Êsomething Êlik Êe Êthis
 Ê
<html> 
<head> 
 <title>MSc</title> 
</head> 
<body> 
<form name="unameForm" action="server page" method="get"> 
Username: <input type="text" name="uname" /> 
<input type="submit" value="Submit" /> 
</form> 
</body> 
</html> 
Listing Ê2: ÊSimple ÊHTML Êform Ê
The Ê trend Ê shifted Ê towards Ê improving Ê the Ê serv, Êersto Ê improve Ê the Ê
responsiveness Êof Êthe Êserver Êbut Êstill Êafter Êsome Êtime Êusers Êstill Êthot Êug was ht Ê Êi
not Êgood Êenough. ÊThen Êcame ÊAJAX Êit Êchanged Êthe Êconcept Êof Êmoving Êfrom Ê
page Êto Êpage Êfor Êinformation Êand Êgave Êa Êtrue Êapplication Êbased Êenvironment Ê
on Êthe Êweb. Ê[7] Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 5 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
AJAX Ê
AJAX Ê stands Ê for Ê Asynchronous Ê JavaScript Ê and Ê XM ÊL It. Ê allows Ê web Ê
application Êto Êsendd Êata Êto Êand Êfrom Êthe Êserver Êasynchronous Ê Êly.
 Ê
Some Êof Êthe Êmajor Êbenefits Êof ÊAJAX Êinclud Ê e
¥ User-??? Êinterface Ê
¥ Reduces Êrefresh Êrat Êe
¥ Increases Êclient Êresponsivenes Ês[37] Ê
 Ê
How ÊAJAX Êdoes Êall Êthis? ÊLetÕs Êsee Êa Êbasic Êdiagram Êof Êhow ÊAJAX Êmakes Êa Êcall Ê
and Êresponds Ê.
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Figure Ê1: ÊAJAX Êcall Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Source: Ê[6] Ê
The Êdiagram Êillustrates Êhow Êa Êuser Êinvokes Êa Êcall Êfrom Êthe Êuser Êinterface, Ê
which Êinvokes Êthe Êrequest Êobject, Êto Êcommunicate Êwith Êthe Êwebserver Êand Ê
return Êthe Êdata Êin ÊXM, ÊLthat Êdata Êis Êthe Êretrieved Êby Êthe Êrequest Êobject Êand Ê
displayed Êon Êthe Êwebpag Êe. [6] Ê
Web ÊService Ê
Web Êservice Êallows Êthe Êcommunications Êbased Êon Êstandards Êusing ÊHTTP Êand Ê
XML-???based Ê messaging. Ê Web Ê services Ê can Ê be Ê used Ê to Ê perform Ê simple Ê and Ê
complex Êtasks. ÊAs Êthey Êare Êbased Êon Êopen Êstandards Êsuch Êas ÊHTTP, ÊXML, Ê
SOAP Ê and Ê WSDL Ê they Ê are Ê not Ê dependent Ê on Ê things Ê like Ê hardware, Ê
programing Êlanguage, Êand Êeven Êthe Êoperating Êsystem. ÊEnab Êling application Ê
on Êdifferent Êhardware Êmade Êin Êdifferent Êprogramming Êlanguage Êand Êusing Êa Ê
different Êoperating Êsystemto Ê Êeasily Êcommunicate Êwith Êeach Êother Êusing Êthe Ê
web Êservice. Ê[25] Ê
 Ê Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 6 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Web Ê services Ê are Ê based Ê on Ê XML Ê and Ê have Ê three Ê important Ê components Ê
WSDL, ÊSOAP Êand ÊUDDI Ê.
 Ê
The Êfirst Êcomponent Êis ÊWSDL. ÊWhen Êthe Êweb Êservice Êis Êbeing Êcreated Êa ÊWSDL Ê
documents Êis Êcreated Êwhich Êhas Êall Êthe Êinformation Êabout Êthe Êweb Êservice, Ê
such Ê as Ê its Ê location Ê and Ê the Ê functionality Ê it Ê will Ê pro ÊvTidhe Ê e. second Ê
component Êis ÊUDDI Êis Êan Ê optional Êpart Êbut Êcan Êbe Êimportant Êfor Êsome. ÊOnce Ê
the ÊWSDL Êis Êcreated Êits Êinformation Êis Êthan Êadded Êto ÊUDDI Êregistry Êthis Ê
allows Êthe Êweb Êservices Êto Êbe Êsearched Êand Êfound Êby Êthe Êpeople Êwilling Êto Êuse Ê
it. ÊBased Êon Êthe Êinformation Êin Êthe ÊUDDI Êregistry Êittss Ê Êtghe Ê e insruc t tions Êfrom Ê
the ÊWSDL Êdocument. ÊSOA ÊPmessages Êare Êthan Êformed Êthat Êare Êexchanged Ê
between Êthe Êservices Êover ÊHTT. Ê[ P25] Ê
XML Ê
XML Êis Êa ÊW3C Êstandard Êwhich Êdefines Êa Êm -???lang etauage Êfor Êdescribing Êdata. Ê
XML Êis Êbasis Êof Êall Êmodern Êweb Êservices Êas Êthey se ÊXM Êu L Êbased Êtechnologies Ê
to Êexplain Êtheir Êinterface Êand Êencode Êtheir Êmessages. ÊWSDL, ÊUDDI Êand ÊSOAP Ê
and Êall ÊXML Êbased Êtechnologies Êand Êcan Êbe Êinterpreted Êby Êany Êmachine . Ê[25] Ê
WSDL Ê Ê
WSDL Êis Êalso Êa Êstandard Êset Êby ÊW3C Êfor Êdescribing Êweb Êservices. ÊAnyone Ê
who Êwants Êto Êaccess Êthe Êweb Êservice Êand Êcan Êread Êand Êinterpret Êit. ÊIt Êprovides Ê
all Êthe Êdetails Êto Êthe Êus Êoerr Êthe Êprogram Êrequesting Ê Êitthat , Êfrom Êwhere Êthe Ê
service Êcan Êbe Êaccessed Êwhat Êfunctionality Êis Êprovided Êby Êthe Êweb Êservice Êand Ê
what Êprotocols Êshould Êbus e Êed Êto Êcommunicate Êwith Êthe Êweb Êserv Êic [25] e. Ê
 Ê
A ÊWSDL Êfile Êas Êdiscussed Êabove Êis Êbased Êon ÊXML Êand Êhas Êsix Êmain Êelem Ê ents:
 Ê
1. Port ÊType Ê Ð Êgroups Êand Êdescribes Êthe Êoperations Êperformed Êby Êserv Êice
2. Port ÊÐ Êspecifies Êan Êaddress Êfor Êbinding Ê
3. Message ÊÐ Êdescribes Êthe Ê names Êand Êformat Êof Êthe Êmessages Êsupport Êed
4. Types ÊÐ Êdefines Êthe Êdata Êtype Êused Êfor Êsending Êdata Êbetween Êclient Êand Ê
server Ê
5. Binding ÊÐ Êdefines Ê the Ê communication Ê protocols Ê supported Ê by Ê the Ê
operations Ê
6. Service ÊÐ Êspecifies Êthe ÊURL Êfor Êaccessing Êthe Êserv Êice
 Ê
This Êdocuments Êis Êa Êcontract Êbetween Êthe Êclient Êand Êthe Êserver Êif Êthe Êrules Êare Ê
followed Êcommunication Êcan Êb e Êdone. Ê[25] Ê
UDDI Ê
UDDI Êis Êa Êstandard, Êwhich Êis Êsponsored Êby ÊOASIS. ÊIt Êis Êoften Êreferred Êto Êas Ê
yellow Êpages Êof Êweb Êservices. ÊIt Êalso Êbased Êon ÊXML Êit Ê Êallo busws iness Êto Êlist Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 7 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
their Êweb Êservices. ÊThey Êcan Êbe Êprivate Êor Êpublic. ÊThe Êcommunication Êis Êdone Ê
through ÊSOAP. ÊA Êdeveloper Êwilling Êto Êuse Êthe Êservice Êcan Êquery ÊUDDI Êto Êfind Ê
the Êservice. Ê[25] Ê
Types Êof ÊWeb ÊServic Êe
SOAP Ê
Microsoft Êdeveloped ÊSOAP Êthat Êis ÊÒSimpOle Ê bject ÊAccess ÊProtocolÓ Êin Êthe Êyear Ê
1988 Êand Êsince Êthan Êit Êhas Êbecome Êa Êstandard Êin Êweb Êservices. ÊIt Êis Êused Êin Êweb Ê
services Ê combined Ê with Ê WSDL Ê and Ê XML Ê to Ê exchange Ê messages. Ê [9] Ê
[13][14][21] Ê
 Ê
It Êis Êalso Êa ÊW3C Êstandard Êand Êthe Êability Êfor ÊSOAP Êto Êexchang essag e Êes m Ê
between Êclients Êirrespective Êof Êthe Êprogramming Êlanguage Êis Êwhat Êmade Êit Êan Ê
important Êin Êweb Êservices. ÊSame Êas ÊWS, ÊDSLOAP Êis Êalso Êan ÊXML Êbased Ê
document Êhas Êthese Êelement Ês
 Ê
1. Envelope ÊÐ Êspecifies Ê that Ê the Ê xml Ê documents Ê is Ê SOAP Ê message; Ê
encloses Êthe Êmsesage Êitself Ê
2. Header Ê-??? Êthis Êis Êoptional Êit Êhas Êinformation Êrelated Êto Êmessage Êthe Êtime, Ê
authentication Êdata Êetc Ê.
3. Body Ê-??? Ê Ê has Êthe Êmessage Êpay Êload Ê
4. Fault ÊÐ Êthis Êis Êoptional Êas Êwell Êit Êcontains Êthe Êerror Êwithin Êa ÊSOAP Ê
message. Ê
 Ê
Data Êbetween Êusers Êand Êweb Êserv cesi Êis Êexchanged Êbased Êon ÊSOAP Êas Êit Êis Ê
mentioned Êin Êthe ÊWSDL Êcontract Êweb Êservice Êis Êguaranteed Êto Êwork Êwith Ê
SOAP. Ê The Ê data Ê is Ê exchanged Ê using Ê request Ê and Ê response Ê SOAP Ê
messages.[25] Ê
The Êbasic Êstructure Êoa Ê f ÊSOAP Êobject: Ê
 Ê
<env:Envelope Êxmlns:env="?http://ww.w3.o w rg/2003/05/soap-???envelope"? Ê>
 Ê<env:Header> Ê
 Ê Ê Ê Ê Ê <!-???-??? ÊHeader Êinformation Êhere Ê -???-??? > Ê
 Ê</env:Header> Ê
 Ê<env:Body> Ê
 Ê Ê Ê Ê <!-???-??? ÊBody Ê-???-??? > Ê
 Ê</env:Body> Ê
</env:Envelope> Ê
Listing Ê3: ÊBasic ÊSOAP ÊStructur Êe
This Êis Êthe Êbasic Êstructure Ênow Êletee Ê s Êshow Êcan Êwe Êuse ÊSOAP Êto Êrequest Êa Ê
stock Êquote. Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 8 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
So Êa Êbasic Êexample Êof ÊSOAP Êfor Êrequesting Êa Êstock Êqfro uom te Ê Êa Êweb Êservice Ê
would Êlook Êsomething Êlike Êthe Êfollowing Ê :
The Êrequest: Ê
GET Ê/StockValue ÊHTTP/1.1 Ê
Host: Êauction.org Ê
Content-???Type: Êapplication/soap+xml; Êcharset=utf-???8 Ê
Content-???Length: Êxxx Ê
<?xml Êversion="?1.0"? Ê?>
<env:Envelope Êxmlns:env="?http://www.w3.org/2003/05/soap -???envelope"? Ê
 Ê Ê Ê xmlns:s="?http://www.auction.org/StockValue"? Ê>
 Ê Ê Ê <env:Body> Ê
 Ê Ê Ê Ê Ê <s:GetStockValue> Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê <s:Item>APPLE</s:Item> Ê
 Ê Ê Ê Ê Ê </s:GetStockValue> Ê
 Ê Ê Ê </env:Body> Ê
</env:Envelope> Ê
Listing Ê4: ÊSOAP Êrequest Êfor ÊStock ÊVa Êlue
The Êrequest Êclearly Êshows Êthe Êhost Êto Êwhich Êthe Êrequest Êhas Êbeen Êmade Êthe Ê
content Êtype Êand Êthe Êitem Êfor Êwhich Êthe Êvalue Êis Êrequired. ÊTo Êunderstand Ê
further Êwe Êsee Êthe Êresponse Êof Êthis Êreques Ê t.
 ÊThe Êresponse: Ê
 ÊHTTP/1.1 Ê200 ÊOK Ê
Content-???Type: Êapplication/soap+xml; Êcharset=ut-???f8 Ê
Content-???Length: Êxxx Ê
 Ê
<?xml Êversion="?1.0"? Ê?>
<env:Envelope Êxmlns:env="?http://www.w3.org/2003/05/soap -???envelope"? Ê
 Ê Ê Ê xmlns:s="?http://www .auction.org/StockValue"? Ê>
 Ê Ê Ê <env:Body> Ê
 Ê Ê Ê Ê Ê <s:GetStockValueResponse> Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê <s:StockValue>1499</s:StockValue> Ê
 Ê Ê Ê Ê Ê </s:GetStockValueResponse> Ê
 Ê Ê Ê </env:Body> Ê
</env:Envelope> Ê
Listing Ê5: ÊSOAP Êresponse Êfor Êstock Êva Êlue
The Êresponse Êshows Êthe Êvalue Êthat Êhas Êbeen Êreturned Êfor Êthe Êstock Êis Ê1499. Ê
This Êgives Êa Êgeneral Êidea Êon Êhow ÊSOAP Êwo ÊTo Ê rks.see Êactual Êrequests Êand Ê
response Êof Êthis Êsystem Êsee Ê Listing Ê8 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 9 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
REST Ê
ÒREST Êwas Êintroduced Êby ÊRoy ÊFielding Êin Êhis Êthes in Êiswhic Ê h Êhe Êwrote Êthe Ê
main Êidea Êof ÊREST Ê(Representative ÊState ÊTransfer). ÊIt Êis Êbased Êon Êarchitectural Ê
style Êand Êit Êcan Êbe Êexplained Êeasily Êby Êcomparing Êthe Ê4 Êwords.Ó Ê[9][21] Ê
 Ê
HTTP Ê Equivalent Ê
GET Ê Read Ê
POST Ê Create, Êupdate, Êdelet Êe
PUT Ê Create, Êupdate Ê
DELETE Ê Delete Ê
Table Ê1: ÊRest ÊHTTP Êequivalen Êt
So Êto Êgive Êa Êsimilar Êexample Êof Êa ÊRESTful Êservice Êcompared Êto ÊSOAP Êwe Êuse Ê
the Êsame Êscenario Êas Êin ÊSOA ÊP Ê
The Êrequest: Ê
 ÊGET Ê/StockValue/APPLE ÊHTTP/1.1 Ê
Host: Êauction.org Ê
Accept: Êtext/xml Ê
Accept-???Charset: Êutf-???8 Ê
Listing Ê6: ÊREST Êrequest Êfor Êstock Êva Êlue
The Êresponse: Ê
 ÊHTTP/1.1 Ê200 ÊOK Ê
Content-???Type: Êtext/xml; Êcharset=ut-???f8 Ê
Content-???Length: Êxxx Ê
 Ê
<?xml Êversion="?1.0"? Ê?>
<s:Quote Êxmlns:s="?http://auction.org/StockValue"? Ê >
 Ê Ê Ê Ê Ê <s:Stock>IBM</s:Stock> Ê
 Ê Ê Ê Ê Ê <s:StockValue>1499</s:StockValue> Ê
</s:Quote> Ê
Listing Ê7: ÊREST Êresponse Êfor Êstock Êva Êlue
The ÊRESTful Êcompared Êto ÊSOAP Êis Êmuch Êlighter Êin Êweight Êand Êsimpler Êto Êuse Ê
as Êwell Êwhen Êcomparing Êto ÊSOAP, Êas ÊSOAP Êsends ÊHT req TP Ê uests Êand Êthe Ê
load Êof ÊXML Êfor Êthe Êaction Êof Êthe Êrequest. Ê[9] ÊSOAP Êis Êmore Êgeneral Êand Êcan Ê
have Êany Êkind Êof Êaction Êwhere Êas ÊREST Êis Êbetter Êfor Êdatabase Êinterac Ê tion.
Benefits Ê
Web Êservices Êhas Êmany Êadvantages Êusing Êthem Êcan Êlead Êto Êtechnological Êand Ê
even Êbusiness Êbenefits. ÊSome Êof Êthese Êbenefits Êare Ê
 Ê
1. Application Êand Êdata Êintegratio Ên
2. Code Êre-???use Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 10 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
3. Time ÊEffectiveness Ê
4. Supported Êon Êmore Êplatform Ês.
 Ê
Application Êand Êdata Êintegratio Ên
Web Êservice Êdoes Ênot Êneed Êto Êknow Êon Êwhich Êsystem Êor Êon Êwhich Êlanguage Êit Ê
is Êbeing Êimplemented Êor Êused. ÊIt Êcan Êbe Êintegrated Êwith Êapplications, Êwhich Ê
are Êin Êdifferent Êlanguage Êthan Êthe Êservice Êis Êimplemented Ê[25] Êin. Ê Ê
 Ê
Code ÊRe-???user Êand ÊTime Êeffectivenes Ês
One Êof Êthe Êmost Êimportant Êbenefit s Êis Êre-???use: Êonce Êa Êweb Êservice Êhas Êbeen Ê
created Êit Êcan Êbe Êused Êby Êmany Êapplicatio, Êns if Êthe Êfunctionality Êrequires Êthat Ê
service. ÊThese Êbenefits Êresult Êin Êtime Êeffectiveness Êof Êthe Êover Êall Êsystem Êas Êit Ê
supports Ê all Ê platforms Ê that Ê communicate Ê based Ê Êoan ÊWSDL Êmediated Ê
contract, Êthese Êplatforms Êare Êboth Êinnu merable Êand Êvaried . ÊHence Êno Êneed Êto Ê
implement Êa Êdifferent Êservice Êfor Êevery Êplatform Ê[25] . Ê
Data ÊVisualization Ê
The ÊGestalt Êlaw Êof Êproximity Êstates Êt Êhat
 Ê"?Objects Êor Êshapes Êthat Êare Êclose Êto Êone Êanother Êappear Êto Êform Êgroups"?. Ê
Even Êif Êthe Êshapes, Êsizes, Êand Êobjects Êare Êradically Êdifferent, Êthey Êwill Êappear Ê
as Êa Êgroup Êif Êthey Êare Êclose Êtoget. Êher [33] Ê
 Ê
This Êprinciple Êis Êalso Êknown Êas Ê ÊÒgroupingÓ, Êwhich Êmeans Êthat Êwhen Êobjects Ê
are Êput Êtogether Êthey Êmake Êmore Êsense Êthan Êif Êthe Êobject Êis Êseen Êsep. Êarately
Hence Êif Êyou Êconsider Êone Êpiece Êof Êinformation Êyou Êwould Ênot Êbe Êable Êto Êget Ê
that Êmuch Êinformation Êbut Êif Êyou Êput Êtogether Êsimilar Êpieces Êof Êinformation Ê
together Êand Êview Êthat , Êit Êis Êmore Êlikely Êto Êgive Êmore Êinformat. Ê[ io33n][34] Ê
 Ê
Data Êvisualization Êis Êvery Êimport nta Êwhen Êcreating Êa Êsystem. ÊIf Êthe Êsystem Ê
does Ênot Êpresent Êthe Êdata Êin Êa Êmanner Êthat Êcould Êbe Êeasily Êinterpreted Êby Êthe Ê
user, Êthe Êchances Êare Êuser Êwill Ênot Êuse Êyour Êsystem Ê, Êag if Êain an Êalternative Êis Ê
available. ÊTo Êensure Êthat Êthis Êdoes Ênot Êhappen Êwith Êytshe Ê tems Êbuilt. ÊI Êhave Ê
used Êtoolkits Êto Êgive Êan Êelegant Êyet Êinformative Êdisp Êlay.
 Ê
The Êquestion Êis Êwhy Êis Êdata Êvisualization Êso Êim tant po,r Êthat Êit Êis Êa Êseparate Ê
field Êin Êcomputer Êscience. ÊLets Êtake Êa Êsimple Êexam ÊCo ple. nsider Êthe Êletters Êin Ê
Figure Ê2. ÊNow Êlets Êtry Êfinding Êthe Ênumber Êof Êtimes Êthe ÊÔlet VÕt Êrep er Êeats Êin Êthis Ê
figure. Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 11 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Figure Ê2: ÊVisualizationEx Ê ample Ê1 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê ÊSour ] Ê ce: Ê[7
It Êseems Êto Êbe Ê Êlit atle Êhard ÊdoesnÕt ÊitYes ? Ê Êyou Êcan Êcount Êthe Ênumber Êof Êtimes Ê
the Êletter Ê ÔVÕ Êrepeats Êbut Êit Êwould Êtake Êyou Êa Êlittle Êtime. ÊSome Êtimesm Êig yohtu Ê Ê
even Êhave Êto Êstart Êagain , Êfor Êsomething Êthat Êshould Êbe Êeasy Êand Êshould Ênot Ê
consume Êthat Êmuch Êtim Êe.
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Figure Ê3: ÊVisualization ÊExam ple Ê2 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê] Ê ÊSource: Ê[7
Now Êconsider ÊFigure Ê3. ÊNow Êtry Êto Êcount Êthe Ênumber Êof Êtimes Êthe Êletter ÊV Ê
repeats. ÊSimple ÊisnÕt Êit. ÊThe Êreason Êbis et Êter Êvisualization Êbecause Êwhat Êyou Ê
wanted Êto Ê see Ê was Ê visualized Ê correctly ÊT.here Êis Ê a Ê vast Ê difference Ê in Ê the Ê
amount Êof Êtime Êrequired Êto Êdo Êthe Êsame Êthing Êon Êthe Êsame Êd, Ê atta Ê he Êset
difference Êis Êthe Êresult Êof Êvisualizatio ÊIn. f Êthe Êdata Êset Êis Êvisualized Êaccurately Ê
you Êcan Êget Êthe Ê information Êvery Êquickly Êif Ênot Êit Êcan Êbe Êvery Êtime Êconsum Ê ing.
 Ê
Gestalt Êtheory Êstates Êthat Ê
 ÊÒThings Êwhich Êshare Êvisual Êcharacteristics Êsuch Êas Êshape, Êsize, Êcolor, Êtexture, Ê
or Êvalue Êwill Êbe Êseen Êas Êbelonging Êtogether Êin Êthe ÊviewerÕs Êmin Ó Ê[33] d. Ê
 Ê
Hence Êif Êth e Êinformation Êbeing Êdisplayed Êhas Êsimilar Êvisual Êcharacteristics Êit Êis Ê
likely Êthat Êthe Êviewer Êwill Ênot Êbe Êeasily Êable Êto Êdistinguish, Êwhich Êis Êwhy Êit Ê
was Ênot Êeasy Êto Êclo ate Êthe ÊÔVÕ Êin Êthe Êfirst Êimage, Êitb Êutwas Ê Êcomparatively Êeasy Ê
in Êthe Êsecond Êimag Êe. [33][34] Ê
 Ê
The Êexample Êwe Êconsidered Êhas Êa Êvery Êbasic Êdata Êset. ÊIt Êwas Êvery Êsimple Êand Ê
yet Êthe Êdifference Êin Êboth Êthe Êvisualization Êis Êenormous. ÊThis Êgives Êa Êgood Ê
idea Êon Êwhy Êvisualization Êis Êimportant. ÊNow Êconsid a Êer Ê data Êset, Êwhich Êhas Ê
more Êthan Ê10,000 Êvalues . ÊIt Êmight Ênot Êeven Êbe Êpossible Êto Êget Êthe Ê rminfo ation Ê
clearly Êand Êeffectivelyif Ê Ê the Êvisualization Êis Ênot Êaccurate. Ê f ÊtIhe Êinformation Ê
can Êbe Êretrieved Êit Êwould Êbe Êvery Êtime Êconsum ÊTing his. Êprojects Êaims Êto Êuse Ê
the Êraw Êdata Êand Êvisualize Êthe Êdata Êin Êa Êner Ê manthat Êwould Êgive Êthe Êresult Êof Ê
the Êexample Êabove. ÊSo Êthat Êresearchers Êcan Êfocus Êon Ê Êinfo thermation Êthey Ê
actually Êwant Êinstead Êof Êspending Êvaluable Êtime Êin Êgetting Êthe Êinform. Êation
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 12 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
The Êsystem Êdeveloped Êtries Êto Êachieve Êthe Êbalance Êbetween Ê showing Êa Êloto Êf Ê
information Êor Êtoo Êlittle Êinformatio Êand n Êtries Êto Êshow Êthe Êaccurate Êamount Êof Ê
data Êthat Êshould Êbe Êshown. ÊSystem Êwill Ênot Êin Êany way Êreplace Êthe Êcurrent Ê
visualization Ê as Ê these Ê visualization Ê may Ê be Ê required Ê in Ê some Ê cases Ê when Ê
looking Êat Êgraph s Êlike Êthese Êcan Êhelp Êvisualize Êthe Êinformation Êin Êdifferent Ê
way. ÊWhen Êlot Êof Êinformation Êis Êshown Êit Êwill Êgiv bird e ÊÕa Ê s Êeye-???view Êto Êthe Ê
data Êand Êwhen Êinformation Êis Êless Êit Êwould Êyield Êa Êmore Êspecific Êres Ê ult.
 Ê
Goal Êof Êvisualization Êin Êbioinformatics Êare Ê
1. To Êvisualize Êh uge Êamounts Êof Êdat Êa Ê
2. To Êimprove Êand Êaid Êin Êpattern Êand Êtrend Êrecognit Êion.
 Ê
Visualization Êis Êvery Êimportant Êwhen Êconsidering Êbiological Êdata Êand Êhence ÊI Ê
have Êconsidered Êdifferentv Êisualization Êlibraries Êso Êthat Êthe Êdata Êis Êvisualized Ê
accurately. Ê
JavaScript ÊInfoVis ÊToolkit Ê
JavaScript ÊInfoVis ÊToolkit Êgives Êthe Êability Êto Êdraw Êmany Êdifferent ypes Ê Êtof Ê
graphs Êand Êhas Êmany Êvisualization Êoptions Êas Êwell. Ê[12] Ê
 Ê
 Ê
Figure Ê4: ÊJavaScript ÊInfoVis ÊToolkit ÊGraph Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Source: Ê[8] Ê
Figure Ê4 Êshows Êone Êgraph Êavailable Êin Êthis Êlibrary, Êthis Êis Êjust Êone Êexam , Êtp he Ê le
toolkit Ê has Ê many Ê more Ê functionality Êand Ê is Ê a Ê complete Ê package Ê for Ê
implementing Êsuch Êgraphs Êin Êa Êwebpag Êe.
 Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 13 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Protovis Ê
This Êis Êa nother Êlibrary Êthatp Êrovides Êsimilar Êvisualizations Ê.
 Ê
Figure Ê5: ÊProtovisVi Ê sualization ÊSample ÊSource: Ê][ Ê9
 Ê
It Ê is Ê a Ê product Ê ÊoSftanford Ê Visualization Ê Group, Ê and Êit Ê provides Êim s ilar Ê
functionalities Ê[22] Êbutaft Ê er Êusing Êboth Êof Êthe Ê ibraries l ÊI Êfound Êthat Êthe ÊJIT Êis Ê
more Êsuitable Êand Êhas Êoptions Êthat Êcan Êbenefit Êthe Êus Êmerore. ÊFor Êthis Êreaso Ên I Ê
have Êused ÊJIT Êin Êthis Êprojec Ê t.
 Ê
SUPERFAMILY ÊDatabase Ê
Superfamile Êdatabase Êis Êa Êresource Êfor Êcomparative Êgenomics/proteomics Êand Ê
is Êbased Êon Êhid den ÊMarkov Êmodels. ÊÒThe Êpurpose Êof ÊSUPERFAMILY Êis Êto Ê
detect Êand Êclassify Êin Êprotein Êsequences Êevolutionary Êdomains Êfor Êwhich Êthere Ê
is Êa Êknown Êstructural Êrepresentativ ÊG e.iven Êa Êprotein Êabout Êwhich Ênothing Êis Ê
known Êother Êthan Êthe Êamino -???acid Êsequence, Êthe Êojec b t Êis Êto Êassign Êknown Ê
structural Êdomains Êor Êmore Êspecifically Êdomains Êat Êthe ÊSCOP Êsuperfamily Ê
level.Ó[10][11] Ê
 Ê
The Ê database Ê currently Ê is Ê accessible Ê using Ê either Ê a Ê cloud Ê image Ê or Ê
downloading Êthe Êdata Êand Êsetting Êyour Êown Êserver, Êboth Êof Êthese Êsolute Ê ions Êar
not Êreally Êsuitable Êfor Êa Êsingle Ênovice Êbiology Êuser Êsuch Êas Êan Êundergraduate Ê
student. ÊEven Êfor Ême Êsetting Êup Êthe Êdatabase Êwas Êlittle Êtroublesome. ÊTrying Êto Ê
setup Êa Êdatabase Êthat Êis Êaround Ê30GB Êin Ês Êcize an Êbe Êlittle Êtrick ÊyT.he Êdatabase Ê
as Ê a Ê re source Ê for Êcomparative Ê genomics Êis Ê not Ê as Ê well Ê exposed Ê as Ê the Ê
annotation Êassignment Êservices Êthat Êthe Êwebsite Êprovid Êes. Ê
 Ê
The ÊSuperfamily Êdatabase Êdoes Êprovide Êsome Êweb Êservices Ê[15] Êbut Êthey Êare Ê
not Êsufficient Êenough , ÊI Êwill Êtalk Êabout ÊDistributed ÊAnnotation ÊSyst Êem and Êthe Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 14 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
services Ê provided Ê later. ÊBut Ê the Ê services Ê need Êto Ê be Ê expanded Ê and Ê more Ê
functionality Êneeds Êto Êbm e Êade Êpublicly Êavailable Êthrough Êweb Êservices Êto Êthe Ê
users. Ê
Web ÊServices Êin ÊBio ÊInformatic Ês
In Ê the Ê last Ê decade Ê the Ê ability Ê to Ê perform Ê experiments Ê and esearc Ê rh Ê has Ê
increased Êa Êlot Êand Êthat Êis Êdue Êto Êthe Êadvancements Êin Êtechnology, Êbut Êthis Ê
research Êand Êexperiments Êmeans Êa Êlot Êmore Êd . Êat Ind a ividual Êresearchers Êor Ê
groups Ê all Ê around Ê the Ê world Ê produce Ê these Ê d . ÊatAas Ê the Ê technology Ê has Ê
advanced Êthat Êinformatio n Êis Êavailable Êon Êthe ÊInternet, Êbut Êall Êthe Êgroups Ê
maintain Êthe Êdata Êsets Êthey Êhave Êthem selves Êand Êthey Êuse Êa Êvariety Êdoatf Êa Ê
types Êand Êstandards Ê Ê.
 Ê
This Êinformation Êis Êwidely Êspread Êand Êin Êa Êform Êthat Êan Êindividual Êresearcher Ê
cannot Êget Êall Êthat Êinformat oin, Êeven Êthough Êinformation Êis Êout Êthere. ÊThey Ê
information Êis Êlikely Êto Êbe Êdisorganized ÊHTTile Ê P Êfindexes Êor ÊFTP Êwith Êno Ê
meta-???data Ê over Ê multiple Ê servers. Ê The Ê superfamily Ê database Ê is Ê built Ê from Ê
several Êhundred Êsuch Êsites Êby Êhand ! ÊScreen Êscraping Êfails Êon Êm soething Êlike Êa Ê
JavaScript Êdriven Ê web Ê app Ê interface. Ê These Ê interfaces Ê are Ê common Ê with Ê
Genome Êbrowsers Êsuch Êas ÊGBrowse Êfrom ÊGM[35] OD. ÊThe Êneed Êto Êhave Êa Ê
system Êthat Êallows Êthat Êall Êthe Êdata Êis Êavailable Êin Êa Êmanner Êthat Êevery Êperson Ê
can Êuse Êis Êvital. ÊThis Êgives Êrise Êto Êthe Êneed Êof Êweb Êservices Êin Êbio Êinform Êatics. Ê
 Ê
Another Êadvantage Êof Êhaving Êweb Êservices Êis Êthat Êit Êcan Êbe Êused Êwith ÊTaverna Ê
as ÊTaverna Êworks Êwith Ê WSDL ÊWeb Êservices Êand Êwould Êbe Êcompatible Êwith Ê
the Êweb Êservices Êdeveloped . ÊTaverna Êis Êa Êprouc dt Êof Êthe ÊmyGrid Êteam Êand Êis Ê Êa
domain-???independent Ê Workflow Ê Management Ê System. Ê It Ê provides Ê tools Ê to Ê
design Êand Êexecute Êscientific Êworkflows Êand Êaid Êin Êsilico Êexperimentat Ê[38] ion. Ê
Web ÊServices Ê& ÊSUPERFAMILY ÊDataba Êse
Superfamily Êin Êgeneral Êwants Êto Êscale Êto ÊtClo he Êud Ò Ó Êand Êimplementing Êweb Ê
services Êwould Êbe Êa Êgreat Êway Êptro o Êgress. ÊSince Êwe Êcould Êhave Êmany Êweb Ê
services Êservers Êand Êload Êbalance Êthem Êwith ÊDNS Êusing Êservices Êlike ÊAmazon Ê
Cloud Êfront Ê.This Êproject Êintroduces Êmore Êservices Êto Êthe Êusers Êso Êthat Êthey Ê
can Êaccess Êmuch Êmore Ê data Êfrom Êthe Êsuperfamily Êdat bas a e. Ê
 Ê
The Êsuperfamily Êdatabase Êcurrently Êprovides Êsome Êweb Êservices Êusing Êthe Ê
DAS Êservice Êspecification. ÊDAS Êstands Êfor ÊDistributed ÊAnnotation ÊSystem. ÊSo Ê
users Ê go Ê to Ê DAS Ê registry Ê site Ê and Ê then Ê get Ê forwardoed Ê t Êhe Ê t distributed Ê
annotation Êservers Êfor Êwhich Êsuperfamily Êis Êa Êsingle Ê example. ÊAssignment Ê
here Êis Êassigning Êan Êinformative Êtag Êto Êa Êbiologsic eqal Ê uence; Êin Êthe Êcase Ê of Ê
SUPERFAMILY, Êtag Êis Êthe Êpresence Êand Êabsence Êof Êprotein Êdomain Êsuper Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 15 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
families. ÊThis Êproject Êis Êfocused Êon Êproviding Êweb Êservices, Êwhich Êis Êoutside Ê
of Êthis Êscop Êeof Êdomain Êassignment. ÊSo Êthis Êprojects Êdoes Ênot Êreplace Êthe Ê
current Êweb Êservices Êrather Êcomplements Êthe Êsystem Êby Êadding Ênew Êfeat Êures.
[31][32] Ê
Current ÊProjects Ê
my
Grid Êproject Ê
my
Grid Êproject Ê is Ê a Ê project Ê by Ê the Ê government Ê of Ê UK Ê under Ê-???Sitcsienc Ê Ee Ê
Programme. Ê This Ê project Ê has Ê adopted Ê the Ê technology Ê of Ê web Ê services Ê to Ê
provide Êan Êopen Êsource Êbased Êweb Êservice Êto Êfacilitate Êexperiments Êin Êsilico, Êin Ê
the Êfield Êof Êbiology. Ê[2] Ê
 Ê
Current ÊVisualizations Ê
 Ê
 Ê
Figure Ê6: ÊCurrent ÊVisualization Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Source: Ê[1] Ê
 Ê
The Êabove Êimage Êisa Ê ÊBinary Êtree, Êwhich Êis Êcurrently Êimplemented. ÊThis Êis Êa Ê
portion Êof Êthe Êgraph Êas Êthe Êinformation Êis Êa Êlot Êon Êa Êsingle Êgraph Êtoly Ê Êbe Êeasi
understood Êand Êeffectively Êretrieved Êby Êthe Êuser . Ê Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 16 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
Figure Ê7: ÊCurrent ÊVisualization Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Source: Ê[1] Ê
 Ê
This Êis Êanother Êimplementation, Êwhich Êis Êcurrently Êbeing Êused. ÊIn Êthis Êgraph Ê
the Êinformation Êth at Êis Êshown Êcan Êbe Êincreas Êed.
 Ê Ê
Similarly Êother Êprojects Êlike ÊMOB-???SYervices Êand ÊSemantic -???MOBY Êhave Êalso Ê
implemented Êthe Ênew Êtechnology Êto Êsolve Êthe Êproblem Êfaced Êby Êthe Êbiologists. Ê
[2] ÊThey Êhave Êcommand Êline Êtools Êalready Êwrapped Êas ÊSOAP/WSDL Êservices Ê
but Ênot Êa Êdatabase. Ê
 Ê
 Ê
Figure Ê8: ÊPANTHER ÊVisualization Ê Ê Ê Ê Ê ÊSourc]e Ê: Ê[2
 Ê
PANTHER Êis Êa Êvery Êsimilar Êservice Êto ÊSUPERFAMILY, Êso Êthe Êuse Êcase Êis Êthe Ê
same Êand Êso Êare Êthe Êkinds Êof Êvisualization Êto Êbe Êdone. ÊThe Êabove Êpage Êis Êfrom Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 17 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
their Êontology Êbrowser. ÊClicking Êthe Êcategory Êon Êthe Êpie Êchart Êwould Êtake Êyou Ê
to Êanother Êpie Êchart Êthat Êshows Êthe Êdetails Êt Êo hatf Êportion. Ê
 Ê
Figure Ê9: ÊPANTHER ÊV isualization Ê Ê Ê Ê Ê Ê Ê Ê ÊSour] Êce: Ê[3
If Êthat Êcategory Êhas Êno Êlower Êlevel Êcategories is Ê Êtm hessage Êis Êdisplayed Êand Êis Ê
a Êdead Êend. ÊYou Êhave Êto Êgo Êback Êin Ê r Êbyro ouwser Êto Êchange Êthe Êquery. ÊThe Êpie Ê
charts Êare Ênot Êinteractive Êas Êwell. Ê
 Ê
So, Ê Websites Ê providing Ê similar Ê information Ê d Êohave Ê some Ê kind Ê of Ê
visualization Ê but Ê that Ê visualization Ê is Ê not Ê g do Êoenough, Ê it Ê makes Ê it Ê time Ê
consuming Êand Êhard Êfor Êa Êresearcher Êto Êgo Êthorough Êthe Êdata Êand Êunderstand Ê
it. Ê Detecting Ê patter ns Ê between Ê genom Êestatistics Ê becomes Ê very Ê hard, Ê as Ê
detecting Êpatterns Êis Êmuch Êeasier Êfor Êhumans Êrather Êthan Êobserving Ênumbers. Ê
Some Êof Êthe Êcurrent Êapproaches Êshow Êthe Êdata Êin Êa Êtable Êand Êsome Êof Êthem Ê
show Êthem Êin Êa Êgraph. ÊWhere Êraw Êdata Êis Êused Êthe Êproblem Êof Êunderstand Ê
large Êquantities Êof Êdata Êaris.es ÊWhere Êgraphs Êhave Êbeen Êused Êthe Êinformation Ê
provided Ê is Ê very Ê limited, Ê the Ê graph Ê doeso Êt Ênpopulate Ê data Ê as Ê the Ê user Ê
requests Êrather Êa Êgraph Êcontaining Êall Êthe Êinformation Êis Êshown. ÊSo Êthese Êare Ê
some Êof Êproblems Êin Êcurrent Êapproaches Ê . Ê
Problem ÊStatement Ê
When Êwe Êtalk Êabout Êgenomes, Êproteins, ÊDNA Êa Êhuge Êamount f Êd Êatoa Êand Ê
large Ê databases Ê com Êeto Ê mind. Ê The Ê field Ê of Ê biology Ê and Ê bioinformatics Ê
requires Êthat Êthe Êdata Êis Êavailable Êto Êeveryone. ÊTechnology Êhas Êspread Êto Ê
almost Êeverything Ênow Êdays Êand Êthis Êfield Êhave Êalso Êadapted Êtechnology. Ê
Some Êof Êthe Êinformation Êand Êdatabases Êare Êavailable Êonline Ê oug thr h ÊWorld Ê
Wide ÊWeb Ê(WWW). ÊSo Êis Êthe Êproblem Êsolved? ÊNO, Êthe Êdata Êcan Êbe Êviewed Ê
online Êbut Ênot Êreceived Êin Êa Êprogrammatic Êform Êso Êthat Êit Êcan Êbe Êmanipulated Ê
and Êprocessed Êfor Êfurther Êresearch Êand Êexperiments. ÊSome Êof Êthe Êresearchers Ê
use Êthe Êtechnique Êof Êreen Ê sc scraping Êto Êget Êthe Êdata. ÊThis Êtechnique Êallows Ê
you Êto Êextract Êthe Êinformation Êon Êthe Êscreen, Êbut Êthis Êis Ênot Êa Êproper Êor Êeven Êa Ê
long-???term Êsolution. Ê[2][20] Ê
 Ê
Since Êtechnology Êhas Êprogressed Êso Êmuch Êand Êit Êis Ênow Êcapable Êto Êprovide Êa Ê
system Êthat Êcan Êpesrent Êcomplicated Êdata Êin Êsuch Êan Êinformative Êmanner Êthat Ê
the Êuser Êcan Êeasily Êunderstand. ÊThe Êdata Êavailable Êin Ê sup the Ê erfamily Êdatabase Ê
is Êbeing Êused Êin Êa Êspecific Êmanner, Êpeople Êwho Êwant Êto Êuse Êthat Êdata Êand Ê
process Êit Êin Êa Êdifferent Êmanner Êcannot Êdod Ês irec o Êtly. Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 18 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Moreover, Êif ÊI Êtalk Êabout Êsupporting Êmore Êplatforms Êit Êwould Êrequire Êthat Êthe Ê
user Êwould Êhave Êto Êactually Êdeal Êwith ÊSQL Êservers Êthemselves Êand Êknow Ê
SQL. ÊAll Êof Êwhich Êis Ênot Êsuitable Êfor Êa Ênaive Êuser Êsuch Êas Êa ÊBiologist. ÊPeople Ê
on Êthe Êother Êhand und Ê erstand Êthe Êuse Êof Êa Êwebs Êite.
The Êamount Êof Êinformation Êavailable Êtoday Êim ism Ê ense, Êhence Êit Êis Êgetting Ê
difficult Ê to Ê analyze Ê and Ê understand Ê the Ê entire Ê information Ê we Ê have. Ê
Information Êis Êincreasing Êrapidly Êwhereas Êthe Êmethods Êto Êvisualize Êthe Êdata Ê
have Ênot Êchanged Êthat Êoften. ÊThus Êresearchers Êare Êfaced Êwith Êa Êproblem, Êas Ê
they Êcannot Êanalyze Êsuch Êamount Êof Êdata, Êif Êit Êis Ênot Êrepresented Êcorrectly. Ê
Visualizing Êdata Êin Êa Êmanner Êthat Êis Êscalable Êhas Êalways Êbeen Êa Êchallenge Êin Ê
filed Êof Êcomputer Êscience. Ê Ê
Information Êthat Êneeds Êto Êbe Êvisualized Êis Êhuge Êand Êbut Êthat Êis Ênot Êthe Êonly Ê
thing. ÊVisualizing Êthat Êmuch Êinformation Êis Êa Êtough Êbut Êwhat Êmakes Êit Êa Ê
challenge Êis Êthe Êtype Êof Êthe Êdata Êthe Êbiological Êsciences Êhas, Êdata Êis Ênot Êonly Ê
non-???homogenous Êit Êalso Êscalesn Ê Êia Ênon -???linear Êway Êin Êplaces, Êand Êthe Êrelative Ê
importance Ê is Ê biological Ê and Ê numerical. Ê There Ê can Ê be Ê infinite Ê number Ê of Ê
mathematical Êprojections Êand Êpossible Êvisualizations, Êbut Êthe Êchallenge Êis Êto Ê
find Êthe Êone Êthat Êscientifically Êis Êthe Êmost Êmeaningful Ê Êhelp ands Êthe Êbiologist Ê
visualize Êthe Êdata. Ê
We Êlooked Êat Êthe Êbiological Êimportance Êof Êthe Êdata Êand Êits Êcharacteristics, Êbut Ê
from Êcomputer Êscience Êpoint Êof Êview Êthe Êdata Êthat ÊI Êhave Êis Êcomplex -??? Êreal
world Êdata Êand Êwhich Êshould Êmake Êsense Êin Êan Êanalytical Êway o Êv. Ê isT ualize Ê
this Êtype Êof Êdata Êthat Êshould Ênot Êonly Êmake Êsense Êin Êa Êbiological Êmanner Êbut Ê
should Êhave Êvisualization Êthat Êmakes Êit Êeasy, Êfor Êthe Êuser. ÊEven Êwith Êthe Ê
current Êadvancements Êin Êtechnology Êit Êmakes Êit Êa Êchallenge Êto Êvisualize Êthis Ê
data. ÊThis Êapproach Êto Êvisualization Êfrees Êthe Êbiologist Êto Êdefine Êwhat Êshould Ê
be Êvisualized Êand Êhow, Êrather Êthan Êlimiting Êthe Êanalysis Êto Êsomething Êthat Êis Ê
statically Êcomposed Êoffline. Ê
Initial ÊBusiness ÊCas Êe
Considering Ê all Ê the Ê above Ê facts Ê and Ê considering Ê the Ê importanc f Êe Êweb o Ê
services Êin ÊtodayÕs Êworld, ÊI Êhave Êdeveloped Êin Êthis Êproject, Êweb Êservices Êto Ê
solve Êthe Êproblems Êand Êgive Êthe Êfreedom Êto Êresearchers Êto Êuse Êthe Êdata Êas Êthey Ê
wish, Êso Êthat Êthey Êcan Êcarry Êout Êtheir Êresearch Êmore Êeasily. ÊAs Êall Êthe Êusers Êdo Ê
not Êwish Êto Êro pcess Êthe Êdata Êfurther, Êa Êvisualization Êmethod Êis Êdesigned Êto Ê
help Êusers Êvisualize Êthe Êhuge Êamount Êof Êinformation Êin Êa Êmanner Êthat Êis Ê
suitable, Ê fast Ê and Ê appropriate Ê to Ê the Ê needs Ê of Ê the Ê users. Ê Visualization Ê
technique Ê does Ê not Ê only Ê focus Ê on Ê this Ê field Ê opr Ê e Êtyof Ê data, Ê technique Ê
developed Êcan Êbe Êapplied Êon Êany Êd, Êatsim a ilar Êto Êthis Êand Êthe Êconcept Êcan Ê
used Êin Êmany Êof Êcurrent Êvisualization Êmetho Êds.
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 19 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
This Êproject Êintroduces Êa Ênew Ê ay w Êto Êvisualize Êthe Êdata Êin Êinfo biormatics. ÊThis Ê
is Êa Ênew Êapproach Êand Êwill Êhav itse Ê Êadvantages Êand Êdisadvantages. ÊData Ê
visualization Ê implemented Ê in Ê the Ê system Ê is Ê such Ê that Ê user Ê only Ê sees Ê that Ê
information Êthat Êhe Êrequests Êand Êso Êthe Êinformation Êvisualized Êwould Êbe Ê
accurate Êand Êexactly Êwhat Êthe Êuser Êwant Ê s.
How Êis Êthis Êdifferen Êt?
The Êimportant Êquestion Êis Êwhat Êis Êso Êdifferent Êabout Êthis Êproject. ÊWhat Êmakes Ê
itÕs Ê so Ê challenging Ê and Ê worth Ê making. Ê This Ê system Ê tries Ê to Ê overcome Ê the Ê
limitations Êof Êthe Êsystem Êthat Êalready Êexists. ÊSome Êof Êthese Êsystems Êhave Êweb Ê
services Êto Êprovide Êdata Êto Êresearc hes Êbut Êthey Êare Êvery Êlimited. ÊSecondly Êthe Ê
visualization Êis Êinformative Êbut Êit Êcannot Êbe Êeasily Êunderstood Êand Êthere Êis Êa Ê
lot Êof Êdata, Êor Êt Êhe data Êbeing Êshown Êis Ênot Êenough Êor Êeasily Ênavigable, Êor Ê
customizable Êto Êthe Êspecific Êscience Êquestion Êthe Êuser Êhas . Ê
 Ê
This Ê project Ê overcomes Ê these Ê limitations Ê by Ê providing Ê many Ê of Ê the Ê
functionality Ê by Ê web Ê services Ê enabling Ê researchers Ê to Ê get Ê the Ê data Ê in Ê a Ê
standard Êformat Êso Êthey Êcan Êprocess Êit Êfurther. ÊVisualization Êis Êvery Êdifferent Ê
from Ê what Ê is Ê being Ê currently Ê offere d Ê by Ê similar Ê projects. Ê Information Ê
visualization Êis Ênot Êan Êeasy Êtask, Êthe Êchallenge Êis Êto Êmake Êthe Êvisualization Ê
informative Ê and Ê yet Ê easily Ê understood, Ê and Ê that Ê the Ê information Ê being Ê
displayed Êis Ênever Êtoo Êmuch Êor Êtoo Êles Ê s. Ê
 Ê
¥ Improved ÊVisualization Ê
¥ Visualization Êbased Êon Êrequirement Ês
¥ Customizable ÊVisualization Ê
¥ Many Êmore Êfeatures Êthrough Êweb Êserv Êice
 Ê
This Ê differentiates Ê this Ê system Ê fro m Ê all Ê others, Ê it Ê gives Ê informative Ê
visualization Ê of Ê the Ê data Ê with Ê many Ê options Ê to Ê chang , Êhoew Ê the Ê data Ê is Ê
displayed, Êand Êthat Êdata Êis Êonly Êshown Êif Êrequested Êby Êthe Êuser. ÊOnce Êdata Êhas Ê
been Êrequested Êit Êis Êrendered Êto Êthe Êvisualization. ÊEnabling Êuser Êto Êview Êjust Ê
the Êdata Êhe/she Êwants Êon Êthe Êscreen Êinstead Êof Êhaving Êto Êsearch Êthrough Êa Êlot Ê
of Êinformation Êto Êget Êthe Êinformatio they n Ê Êneed. Ê
Proposed ÊSolution Ê
Information Êvisualization Êis Êvery Êimportant Êin Êbioinformatics Êas Êthe Êfield Êis Ê
known Êfor Êits Êvast Êamount Êof Êdata Êand Êthe Êtype Êof Êthe Êdat,a Ê Êasit Ê Êdhas iscussed Ê
above. Ê ÊInformation Êvisualization Ê in Êthe Êfield Êof Êbioinformatics Êhaso Êm s e Êsteps Ê
as Êdefined ÊbyL Êang Êet Êal Ê[29], Êthese Êsteps Êinclud Êe
 Ê
¥ Data Êacquisition Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 20 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
¥ Data Êmapping Ê
¥ Rendering Ê
Data Êacquisition Ê
This Ê step Ê deals Ê with Ê acquiring Ê the Ê required Ê d Êfo atarm Ê the Ê database Êand Ê
processing Êit Êso Êthat Êit Êcan Êbe Êused Êin Êthe Ênext Êstep. ÊOnce Ê ta Ê the Ê hasd Êabeen Ê
acquired Êthe Êdata Êmanipulation Êcan Êbegin Êwhich Êfocuses Êon Êformatting Êthe Ê
data Êin Êa Êformat Êso Êthat Êit Êcan Êbe Êused Êin Êdata Êmap Ê[29] ping Ê .
Data Êmapping Ê
This Êstep Êrequires Êthat Êthe Êdata Êretrieved Êfrom Êthe Êfirst Êstep Êis Ênow Êmapped Êto Ê
shapes Êand Êtheir Êcharacteristics Êare Êdefined Êsuch Êas Êcolor, Êsize Ê& Êlocat ÊIio n Ên.
this Êstep Êthe Êshapes Êare Êdecided Êin Êwhich Êthe Êdata Êis Êto Êbe Êshown Êand Êdifferent Ê
IV Êtechniques Êare Êused Êfor Êthis Ê[29] . Ê
Rendering Ê
This Êis Êthe Êfinal Êstep Êonce Êdata Êmapping Êhas Êbeen Êdone Êite Ê Êisto Ê Êtim render Êthis Ê
data Êto Êthe Êvisualization Êso Êit Êcan Êbe Êvisualized Êon Êthe Êscreen Êand Êuser Êcan Êsee Ê
the Êdata. Ê[29] Ê
 Ê
 Ê
 Ê
Data Ê Data Ê
Rendering Ê
 Ê
acquisition Ê mapping Ê
 Ê
 Ê
 Ê
This Êmethod Êworks Êfine Êin Êvisualizing Êthe Êdata Êbut Êif Êthe Êamount Êof Êdata Êis Ê
huge Êthan Êthe Êvisualization Êwill Êbe Êtoo Êbig Êto Êundnd ers Êtand a Êdetect Êpatterns Ê
for Êa Êresearcher. ÊIn Êthis Êproject Êthe Êdatsa Ê et Êthat Êisc Êonsidered Êto Êvisualize Êis Ê
huge, Êthis Êtechnique Êneeds Êto Êbe Êaltered Êin Êorder Êto Êfit Êthe Êscenario Ê .
 Ê
Allowing Êuser Êto Êdecide Êhow Êmuch Êinformation Êand Êwhat Êinformation Êhe/she Ê
wants Êis Êthe Êkey Êto Êthis Êproject Êthe Êtechnique Êis Êaltered Êso Êthat Êthe Êdata Ê
acquisition Ê is Ê repeated Ê when Ê ever Ê a Ê request Ê is Ê made Ê and Ê rendering Ê
accumulates Êeverything Êso Êthat Êas Êthe Êuser Êmoves Êforward Êhe/she Êcan Êstill Êgo Ê
back Êin Êthe Êvisualization. Ê
 Ê
Data Ê mapping Ê is Ênot Ê a Ê major Ê portion Ê as Ê the Ê visualization Ê that Ê is Ê being Ê
considered Êat Êthis Êpoint Êis Êa Êtree Êwhere Êthe Êlocation, Êcolor Êand Êsize Êare Êalready Ê
decided, Ê but Ê this Ê does Ê not Ê mean Ê it Ê has Ê been Ê movreed Ê because Ê as Ê this Ê
technique Êwill Ênot Êonly Êapp Êly to Êtree Êbut Êother Êvualizat is ions Êas Êwell. Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 21 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
 Ê
Interactive ÊVisualization ÊLoop Ê
 Ê
 Ê
Data Ê Data Ê
Rendering Ê
 Ê
acquisition Ê mapping Ê
 Ê
 Ê
 Ê
So Êthis Êallows Êgoing Êfrom Êrendering Êback Êto Êdata Êacquisition. ÊOnce Êthe Êdata Ê
has Ê been Ê rendered, Ê user Ê can Ê select Ê any Ê information Ê he Ê wants Ê from Ê the Ê
rendered Êview Êa Êrequest Êis Êmade Êfor Êdata Êacquisition Êand Êthen Êis Êdata Êis Ê
mapped, Êfinally Êit Êis Êrendered Êagain Êon Êthe Êscreen Êbut Êthis Êtime Êis Êaltered. ÊThe Ê
new Êdata Êis Êadded Êto Êthe Êalready Êrendered Êdata Êon Êthe Êscreen. ÊHence Êshowing Ê
only Êthe Êinformation Êthe Êuser Êneeds Êinstead Êof Êrendering Êall Êthe Êinformation Ê
that Ê there Ê is , Êwhich Êmakes Ê this Êa Ê powerful Ê tool Ê for Ê visualization Ê in Ê
bioinformatics. Ê Ê
 Ê
This Êtechnique Êfocuses Êon Êhow Êdata Êcan Êbe Êdelivered Êand Êrendered Êand Êthat Ê
the Ê information Ê shown Ê is Ê what Ê the Ê user Ê wants. Ê How Ê to Ê display Ê that Ê
information Ê in Ê a Ê manner Ê that Ê user Ê can Ê easily Ê adapdt Ê Êan understand Ê the Ê
visualization Êis Êanother Êthing Ê.
 Ê
It Ê is Ê very Ê important Ê to Ê know Ê how Ê the Ê data Ê will Ê be Ê displayed Ê what Ê
visualization Ê will Ê be Ê used Ê and Ê will Ê it Ê fulfill Ê the Ê objective. Ê This Ê is Ê very Ê
challenging Êas Êthe Êdata Êat Êhand Êhas Êuniq charac ue Ê teristics. Ê Ê
 Ê
When Êimplementing Êthe Êhierarchy Êof Êgenomes Êthe Êbest Êway Êto Êshow Êsuch Ê
visualization Êwas Êto Êuse Êa Êtree Êgraph. ÊI Êhave Êalready Êdiscussed Êsome Êof Êthe Ê
java Êscript Êlibraries, Êwhich Êhas Êbeen Êused Êin Êorder Êto Êimplement Êthis Êsolut Êion.
The Êvisualization Êmethods Êused Êhav Êbeeen Êselected Êon Êthe Êbasis Êon Êthree Ê
things Ê
 Ê
¥ Gives Êuser Êvisualization Êoptions Ê
¥ Can Êbe Êchanged/altered Êto Êadapt Êthe Êtechnique Êab Êove
¥ Information Êcan Êbe Êvisualized Êclearly Ê
 Ê
It Êis Êhard Êto Êmeasure Êdifference Êbetween Êvisualization Êfor Êthat Êpurpose Êa Ê
criteria Êis Êet s Êto Êjudge Êwhether Êvisualization Ê Êinfo is rmative Êand Êappropriate Ê
for Êthe Êdataset Êbeing Êconsidered Êor Ênothe Ê . ÊTcriterion Êthat Êwas Êconsidered Êfor Ê
judging Ê visualization Ê has Ê been Ê discussed Ê abo ÊvM e.uch Ê visualization Êwere Ê
considered Êbut Êrejected Êas Êthey Êfailed one Ê Ê or Êmore Êof Êthe Êthings Êabove, Êsuch Êas Ê
PlotKit, Êflot ÊandR Êgraph Êetc Ê.These Êlibraries Êdid Ênot Êmeet Êthe Êcriteria Êdiscussed Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 22 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
above. ÊThe Êlibraries Êprotovis, ÊJavaScript ÊInfoVis ÊToolk,it Êand Êhighcharts Êall Ê
fulfill Ê the Ê abo ve Ê criteria Ê and Ê were Ê considered . ÊThe Ê visualizations Ê were Ê
selected Êafter Êshortlisting Êthe Êdifferent Êvisualizations Êthat Êmet Êthe Êcriteria Êand Ê
than Êdiscussing Êthese Êvisualization Êwith Êthe Êsupervisor Êand Êadvisor. ÊoT ne, Ê he Ê
which Êwas Êmost Êsuitable Êfor Êviewing Êthe Êtype Êof Êdata Êbeing Êconsid Êwas ered Ê,
used Êto Êensure Êthat Êthe Êvisualization Êis Êinformat Êive.
 Ê
The Êsecond Êproblem Êis Êunavailabilit Êoyf Êdata Êin Êa Êstandard Êformat ro Êmf Êthe Ê
SUPFERFAMILY Êdatabase. ÊSome Êprevious Êapproaches Êhave Êused Êdifferen t Ê
methods Êto Êsolve Êthisp Êroblem; Êthe Êmethod ÊI Êchoose Êto Êgo Êahead Êwith Êis Êto Ê
make Êweb Êservices. ÊWeb Êservices Êare Êstandard Êand Êare Êused Êin Êmost Êof Êthe Ê
tools Êbeing Êdeveloped Êas Êit Êhas Êmany Êbenefit ÊWe Ê s. discussed Êthe Êweb Êservices Ê
above Êand Êto Êsolve Êthis Êproblem ÊI Êwill ÊSus OA e ÊP, Êas Êit Êis Êna Êindustry Êstandard Ê
and Êmore Êgenera l Êthan ÊRESTful. ÊSo Êif Êthe Êsystem Êis Êexpanded Êlater Êon Êit Êwill Ê
not Êbe Êlimited Êby Êthe Êlimitations Êof Êthe ÊRESTful Êpro Êtocol.
Technology Ê
Java Êis Êmy Êfirst Êchoice Êof Êthe Êlanguage Êto Êuse, Êas Êit Êis Êan Êopen Êsource Êlanguage Ê
the Êtools Êavailable Êfor Êit, Êlike ÊEclipse Ê e Êar free Êof Êcost. ÊWhereas Êusing Ê.NET Ê
would Ê require Ê that Ê I Ê have Ê MS Ê Visual Ê Studio Ê and Ê would Ê be Ê platform Ê
dependent. Ê As Ê this Ê project Ê might Ê be Ê used Ê in Ê the Ê univers ÊI Êithav y e Ê given Ê
preference Êto ÊJav Êaso Êthat Êit Êcan Êbe Êhosted Êon Êthe Êuniversity Êservers Êwithout Ê
any Êproblems. Ê[17] Ê
 Ê
Mainly ÊJava, ÊJava ÊScript, ÊJSP Êand ÊAJAX Êhave Êbeen Êused Êto Êimplement Êthe Ê
system. ÊAJAX Êhas Êbeen Êused Êfor Êretrieving Êthe Êdata Êasynchronously Êwhere Êas Ê
Java ÊScript Êlibraries Êhave Êbeen Êused Êfor Êvisualizat Êion.
Major ÊTools Ê
Item Ê Applied Êfor Ê
Tools Ê Ê
MS ÊVisio Ê Design Ê
Eclipse Ê Implementation Ê
MySQL Ê Database Ê
JavaScript ÊLibraries Ê jQuery Êbased Êvisualizations Ê
Languages Ê Ê
UML Ê Design Ê
Java Ê Web ÊServices Êand ÊServer ÊSide ÊScripting Ê
Java ÊScript Ê& ÊAJA ÊX Client ÊSide ÊScripting Ê
Table Ê2: ÊMajor ÊT ools Êused Êin Êthe ÊProje Êct
In Êthis Êproject Êfor Êdesigning Êthe Êsystem ÊI Êhave Êused ÊMS ÊVisio, Êall Êthe Êdiagrams Ê
are Êin ÊUML Êand Êmade Êusing ÊVisio Êsoftware. ÊEclipse Êtool Êhas Êbeen Êused Êfor Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 23 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
complete Êimplementation Êincluding Êthe Êdata Êvisualization Êand Êweb Êservices. Ê
The Êdatabase Êbeing Êused Êis Êin ÊMySQL. ÊAJAX Êhas Êbeen Êused Êfor Êquick Êretrieval Ê
and Êfast Êinteractive Êvisualizations Ê. Ê
Target ÊPlatform Ê:
 Ê
Item Ê Specifications Ê
OS Ê All Êcurrent Êgeneration Ê Ê
Browsers Ê All Êcurrent Êgeneration Ê
Table Ê3: ÊPlatforms ÊSu pported Ê
The Êsystem Êdeveloped Êwill Êwork Êon Êall Êcurrent Êgeneration Êsystems Êand Êwill Ê
support Êall Êcurrent Êgeneration Êbrowsers Êas Êwell. Ê
Basic Êdesign Ê
 Ê
<<SFD	 ÊSystem>>
 Ê
Figure Ê10: ÊBasic Êdesign Êof Êthe Êsyst Êem
This Êbasic Êdiagrams Êhows Êthe Êbasic Êstructure Êof Êthe Êsystem. ÊThe Êsyshav teme Ê Ê
used Êthe Ê database Ê and Ê providde Êa Ê WSDL Ê interface Ê on Ê the Ê Internet Ê and Ê
everyone Êwho Êwants Êto Êuse Êitc Êan Êaccess Êit Êthrough Êthe ÊInternet. ÊNot Êonly Êthe Ê
people Êwishing Êto Êview Êthe Êdata Êbut Êalso Êthe Êpeopho le Ê Êwant w Êto Êprocess Êit Ê
further Êcan Êaccess Êthe Êsystem Êand Êretrieve Êinformation Êin Êa Êstandard Êform. Ê
The Êsystem Êprovidse Êboth Êa Êweb Êservice Êinterface Êand Êa Êweb Êpage Ê Êfo on Ê rm,
which Êthe Êdata Êcan Êbe Êviewed Ê .
 Ê
This Êalso Êallows Êthe Êpeople Êto Êuse Êthe Êweb Êservices Ê Êand create Êtheir Êown Ê
system Êusing Êthe Êdata Êfrom Êthe Êweb Êservice Êso Êdifferent Êplatforms Êcan Êbe Ê
added Êas Êwell. Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 24 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Non-??? functional ÊRequirements Ê
 Ê
¥ Available Ê24/7. Ê
¥ User Êfriendly Ê.
¥ Scalable Ê
 Ê
 ÊThese Ê non-???functional Ê requirements Ê were Ê considered Ê when Ê designing Ê and Ê
developing Êthe Êsystem. ÊThese Êrequirements Êwill Ê Êm beet Êin Êdifferent Êstages Êof Ê
the Êproject Êsome Êwould Êbe Êmet Êin Êdesigning Êwhere Êas Êsome Êwould Êbe Êmet Êin Ê
implementation. Ê
 Ê
Initial ÊUse ÊCase Ê
View Genome
Hierarchy
*
*
*
*
View Genome
Statistics
*
*
View Protein
Statistics
Biologist
*using the online webpage to view the data.
 Ê
Figure Ê11: ÊBiologist Êinital i Êuse Êcas Êe
Get Hierarchy
Information
*
*
*
*
Get Protein
Statistics
*
*
Get Genome
Statistics
Researcher
*using web service to get the data.
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê
Figure Ê12: ÊResearcher Êinitial Êuse Êca Êse
 Ê
Use Êcase Êshows Êin Êthe Êsimplest Êway Êthat Êwhich Êuser Êwould Êuse Êthe Êsystem Êfor Ê
what Êfunctionality. ÊHere Êthe Êbiologist Êwould Êuse Êthe Ê tem sy Êsto Êview Êthe Êdata Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 25 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
and Ê the Ê researcher Ê would Ê use Ê the Ê system Ê to Ê retrieve Ê data Ê from Ê the Ê web Ê
services Êso Êthat Êhe/she Êcan Êprocess Êit Êfurt Êher.
 Ê
The Êinitial Êmodel Êdoes Ênot Êtell Êany Êdetails Êof Êhow Êthese Êfunctionalities Êwill Êbe Ê
achieved Êto Êunderstand Êa Êlittle Ême Ê oron Êhow Êthese Êfunctionalities Êwill Êbe Ê
performed, Êdetailed Êuse Êcase Êmodel Êhas Êbeen Êdesigned . ÊIt Êshows Êwhat Êoptions Ê
user Êhas Êto Êview Êthe Êdata Êand Êfinally Êthe Êactual Êdata Êthat Êuse Êwishes Ê Êto Êsee.
Detailed ÊUse ÊCas Êe
 Ê
View Genome
Hierarchy
*
ÇusesÈ
* *
*
ÇusesÈ ÇusesÈ
View Genome
View Graph
Enter Details
Statistics
*
ÇusesÈ
*
ÇusesÈ
View Protein
Enter Details
Statistics
Biologist
 Ê
Figure Ê13: ÊDetailed Êbiologist Êuse Êca Êse
Get Genome
Hierarchy
*
ÇusesÈ
*
* *
ÇusesÈ ÇusesÈ
Get Genome
Recieve Data
Enter Details
Statistics
*
ÇusesÈ
*
ÇusesÈ
Get Protein
Enter Details
Statistics
Researcher
 Ê
Figure Ê14: ÊDetailed Êresearcher Êuse Êca Êse
 Ê
The Êdetailed Êuse Êcase Êshows Êhow Êbiologist Êwill Êview Êthe Êdata Êand Êwhat Êsteps Ê
are Êused Êto Êget Êthere. ÊBiologist Ê Êcsan earch Êfor Êwhich Êhe Êneeds Êto Êenter Êdetails. Ê
He/she Êcan Êalso Êselect Êa Êgenome Êor Êprotein Êand Êview Êthe Êg Êraph.
 Ê
Researcher Êcan Êreceive Êthe Êdata Êby Êproviding Êthe Êdetails Êabout Êwhat Êhe/she Ê
wants Êand Êmake Êthat Êrequest Êto Êthe Êweb Êservice. ÊWeb Êservice Êwouldend Êthan Ê Ê s
the Êrequired Êdata Êto Êthe Êresearcher Êin Êa Êstandard Êfo Êrmat.
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 26 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Class ÊDiagram Ê
Service
-??p	 Ê:	 ÊProteinBL
-??g	 Ê:	 ÊGenomeBL
-??a	 Ê:	 ÊAssignmentBL
-??lc	 Ê:	 ÊLencombinationBL
-??c	 Ê:	 ÊCombinationBL
-??t	 Ê:	 ÊTreeBL
+getPorteinBySeqId()	 Ê:	 Êint
+getAssByProteinId()	 Ê:	 ÊString
+getCombinationByTaxonomyAndProteinId()	 Ê:	 ÊString
+getCombinationByProteinId()	 Ê:	 ÊString
+getOrderByProteinId()	 Ê:	 ÊString
+getNameByTaxonId()	 Ê:	 ÊString
+getTaxonIdByLeftId()	 Ê:	 Êint
+getCombinationByComidandTaxonomy()	 Ê:	 ÊString
+getCombinationByCombId()	 Ê:	 ÊString
+getChildrenByNodeId()	 Ê:	 Êint
+getRightIdByLeftId()	 Ê:	 Êint
+getTaxonIdByNodeId()	 Ê:	 Êint
+getLeftIdByRightId()	 Ê:	 Êint
TreeGraph
-??objOfProtein	 Ê:	 ÊProteinBL
1
-??objOfTree	 Ê:	 ÊTreeBL 1 1
1
1 *
1
1
* *
AssignmentBL
* 1
-??objOfAssignment	 Ê:	 ÊAssignment
+getAssByProteinId(in	 ÊproteinId	 Ê:	 Êint)
GenomeBL
+getCombinationByTaxonomyAndProteinId(in	 ÊproteinId	 Ê:	 Êint,	 Êin	 Êtaxonomy	 Ê:	 Êstring)
-??objOfGenome	 Ê:	 ÊGenome
+getOrderByProteinId(in	 ÊproteinID	 Ê:	 Êint)
+getNameByTaxonId(in	 ÊproteinID	 Ê:	 Êint)
+getTaxonIdByLeftId(in	 ÊleftID	 Ê:	 Êint) 1
+getCombinationByComidandTaxonomy(in	 ÊcombID	 Ê:	 Êint,	 Êin	 Êtaxonomy	 Ê:	 Êstring)
*
1
*
LencombinationBL
*
-??Lencomb	 Ê:	 ÊLencombination
+getCombinationByCombId(in	 ÊcombID	 Ê:	 Êint)
ProteinBL
*
-??objOfProtein	 Ê:	 ÊProtein
TreeBL
1
+getPorteinBySeqId(in	 ÊseqID	 Ê:	 Êint)
-??objOfTree	 Ê:	 ÊTree
+getChildrenByNodeId(in	 ÊNodeId	 Ê:	 Êfloat(idl))
CombinationBL
+getRightIdByLeftId(in	 ÊNodeID	 Ê:	 Êint)
1
+getLeftIdByRightId(in	 ÊNodeID	 Ê:	 Êint) -??objOfCombination	 Ê:	 ÊCombination
+getTaxonIdByNodeId(in	 ÊNodeIdD	 Ê:	 Êint)
+getCombinationByProteinId(in	 ÊproteinID	 Ê:	 Êint)
*
1
1
Genome
*
+getOrderByProteinId(in	 ÊproteinID	 Ê:	 Êint)
Lencombination
+getNameByTaxonId(in	 ÊproteinID	 Ê:	 Êint)
+getTaxonIdByLeftId(in	 ÊleftID	 Ê:	 Êint)
+getCombinationByComidandTaxonomy(in	 ÊcombID	 Ê:	 Êint,	 Êin	 Êtaxonomy	 Ê:	 Êstring) +getCombinationByCombId(in	 ÊcombID	 Ê:	 Êint)
*
*
Combination
Tree
+getCombinationByProteinId(in	 ÊproteinID	 Ê:	 Êint)
*
+getChildrenByNodeId(in	 ÊNodeId	 Ê:	 Êfloat(idl))
* +getRightIdByLeftId(in	 ÊNodeID	 Ê:	 Êint)
+getLeftIdByRightId(in	 ÊNodeID	 Ê:	 Êint)
Assignment
+getTaxonIdByNodeId(in	 ÊNodeIdD	 Ê:	 Êint)
Protein
+getAssByProteinId(in	 ÊproteinId	 Ê:	 Êint)
+getCombinationByTaxonomyAndProteinId(in	 ÊproteinId	 Ê:	 Êint,	 Êin	 Êtaxonomy	 Ê:	 Êstring)
+getPorteinBySeqId(in	 ÊseqID	 Ê:	 Êint)
Dbconn
-??Conn
-??Rset
-??stq
-??l	 Ê:	 ÊLog
#Conn()
#Equery(in	 Êquery	 Ê:	 Êstring)
+Closeconnection()
*
1
Log
+logread()	 Ê:	 Êvoid
 Ê
Figure Ê15: ÊClass Êdiagram Êfor ÊSF ÊD
The Ê class Ê diagram Ê shows Ê the Ê implemented Ê classes Ê and Ê the Ê design Ê of Ê the Ê
system. ÊEach Êof Êthe Êmoules d Êhas Êbeen Êimplemented Êin Êa Êseparate Êclass Êhaving Ê
a Êseparate ÊDAO. ÊAll Êthe ÊDAOÕs Êare Êinherit ed Êby ÊDbconn, Êwhich Êhas Êmethods Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 27 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
to Êconnect Êto Êthe Êdatabase Êand Êexecute Êqueries. ÊThis Êallows Êthe Êsystem Êto Êbe Ê
expandable Êlater Êon. ÊAs Êeach Êof Êthe Êmodules Êare Êsin Ê eparat a Ê e Êclass Ênew Ê
methods Êand Êfunctionalities Êcan Êbe Êadded Êwithout Êany Êprob Êlem OO Ê. patterns Ê
were Ê also Êconsidered Êsuch Ê as Ê factory Ê.It Ê is Ê also Ê important Êthat Êthe Ê new Ê
functionalities Êthat Êare Êadded Êare Êavailable Êthrough Êweb Êservice. ÊFor Êthis Êthere Ê
is Êa Êservcie Êclass Êthat Êlists Êall Êthe Êfunctions Êcurrently Êbeing Êprovided Êby Êthe Ê
web Êservice. ÊOnce Êa Ênew Êfunctionality Êis Êadded Êto Êthe Êsystem Êin Êone Êor Êmore Ê
of Êthe Êmodules Êall Êthe Êdeveloper Êhas Êto Êdo Êis Êlink Êthose Êfunctionalities Êin Êthe Ê
service Êclass Êand Êthat Êwill Êen sure Êthat Êthose Êmethods Êare Ênow Êalso Êavailab Ê Êle.
 Ê
This Êdesign Êmaintains Êa Êlow Êcoupling Êbet een Ê w the Êclasses Êand Êshares Êthe Êdata Ê
based Êon Êdata Êencapsulatio. Ê nThis Êensures Êthat Êwhen Êa Êmodule Êis Êupdated Êit Ê
can Êbe Êeasily Êchanged Êand Êdoes Ênot Êaffect Êother Êmos, Ê dule as Êit Êhas Êless Êinter -???
module Êdependency Ê.
 Ê
Some Êtimes Êdesigning Êa Êsystem Êcan Êlead Êto Êover-???design Êwhich Êis Êa Êwaste Êof Ê
time Êand Êrequires Êmore Êtime Êin Êadding Êfunctionalities Êto Êthe Êsystem Êas Êwell. Ê
To Êensure Êthis Êdoes Ênot Êhappen ÊI Êhave Êused Êtraceability Êxm ÊFatigriure Ê16. Ê
according Êto Êthe Êrequirements Êof Êthe Êproject. ÊEach Êrequirement Êis Êmapped Êto Ê
the Êclass Êthat Êit Êis Êusing Êto Êsee Êwhether Êany Êof Êthe Êclasses Êare Êuseless Êand Êdoes Ê
not Êneed Êto Êbe Êcreated Ê .
 Ê
Requirement Ê Tree Ê/Tree Ê Genome Ê Protein Ê Combinat Len Ê Assignment Ê
Graph Ê ion Ê Combination Ê
User Êcan Êview Ê Ê Ê Ê Ê Ê Ê
tree Ê Ê
 Ê Ê
 Ê
Use Ê can Ê Ê Ê Ê Ê Ê
 Ê
search Ê
genome Ê
User Ê can Ê Ê Ê Ê Ê Ê
 Ê
Search Ê
Protein Ê
User Êcan Êview Ê Ê
 Ê Ê Ê Ê Ê
comparison Ê
by Êtaxonomy Ê
Figure Ê16: ÊTraceability Êmatrix Êfor Êcss Ê la diagram Ê
Each Êrequirement Êis Êmet Êthrough Êa Êclass, Êwhich Ê erfo prms Êfurther Êfunctions Êto Ê
fulfill Êthat Êrequest ÊM . atrix Êin ÊFigure Ê16 Êshows Êinformation Êabout Êrequirements Ê
and Êclasses Êused Êby Êeach Êo tho f Êse Êrequirements. Ê Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 28 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Sequence ÊDiagrams Ê
Statistics Êof ÊGenom Êe
 Ê
:Genome
Database
:GenomeBL
:Service
User
Comb ÊId, ÊTaxonomy
getCombByCombidandTaxonomy
getCombByCombidandTaxonomy getCombByComidandTaxonomy
Combination ÊStatistics Combination ÊStatistics
Combination ÊStatistics
Combination ÊStatistics
 Ê
Figure Ê17: ÊSequence Êdiagram Êfor ÊStatistics Êof Êgeno Ême
Above Êsequence Êdia gram Êclearly Êshows Êhow Êthe Êprocess Êworks, Êin Êthis Êcase Ê
how Êa Êresearcher Êcan Êretrievse Ê tatistics Êof Êa Êgno e me. ÊThe Êresearcher Êfirst Êcalls Ê
the Ê web Ê service Ê and Ê gives Ê details Ê like Ê combination Ê id Ê and Ê taxonomy Ê the Ê
service Ê than Ê call Ê the Ê genomeBL Ê class, Ê which Ê is Ê the Ê business Ê logic Ê class. Ê
GenomeBL Ê than Ê calls Ê the Ê genome Ê class, Ê which Êthe Ê is Ê DAO Ê.The Ê genome Ê
requests Êthe Êinformation Ê from Ê the Ê database Ê and Ê sends Ê it Ê b Êac tok Ê the Ê
GenomeBL Êwhich Êsends Êit Êback Êto Êthe Êservice Êand Êfinally Êto Êthe Êuser. Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 29 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Children Êby ÊNodeID Ê
:Tree
Database
:Service :TreeBL
User
Node ÊId
getChildrenByNodeID
getChildrenByNodeID getChildrenByNodeID
Nodes Nodes
Nodes
Nodes
 Ê
Figure Ê18: ÊSequence Êdiagram Êfor ÊChildren Êby ÊNode Ê ÊID
The Êsequence Êdiagram Êabove Êshows Êhow Êchildren Êfor Êa Êspecific Ênode Êcan Êbe Ê
retrieved. ÊResearcher Êfirst Êcalls Êthe Êservice Êand Êsends Êthe Ênode Êid. ÊThe Êservice Ê
than Êcalls Êthe ÊTreeBL Êclass, Êwhich Êis Êthe Êbusiness Êlogic Êclass. ÊTreeBL Êthan Êcalls Ê
the ÊTree Êclass Êwhich Êacas ts Ê Êa ÊDAO Êfor Êee Ê Tr which Êgets Êthe Êinformation Ê rom Ê f
the Êdatabase Êand Êsends Êit Êbac Êtok Êthe ÊTreeBL Êwhich Êsends Êis Êto Êthe Êservice Êand Ê
finally Êto Êthe Êuser. Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 30 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
System ÊArchitecture ÊDiagram Ê
Visitor
Browser
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê
http
<<SFB System>>
DAL
Support ÊLayer
Web ÊServices
Framework Êclasses
Module Ê1 Module Ê2
Pass Ê
Entity
Encrypt/
Logging ÊLayer
Classes
Decrypt
Module Ê3 Module Ê4
Module Ê5
Module ...
Presentation ÊLayer
Database
 Ê
Figure Ê19: ÊSystem Êarchiec t ture Êdiagram Êfor ÊSFD Ê
The Êsystem Êarchitecture Êgives Êdetailed Êinformation Êabout Êthe Êsystem Êand Êhow Ê
the Êsystem Êwork s. ÊThe Êsystemis Ê Êbased Êon Ê5 Êbasic Êlayers ÊData ÊAccess ÊLayer Ê
that Êdeals Êwith Êdata Êaccess Êobjects Êthat Êretriev s Êtehe Êinformation Êfrom Êthe Ê
database; ÊPresentation ÊLayer Êdeal s Êwith Êthe Êdisplay Êof Êthe Êdata Êthat is Êbe Ê ing Ê
retrieved Êfrom Êthe Êdatabase. ÊWhereas Êthe ÊWeb ÊServices Êprosv Êid a ÊeWSDL Ê
interface Êto Êsystem Êso Êthat Êthe Êdata Êcan Êbe Êretrieved Êin Êa Êform Êthat Êcan Êbe Ê
computed Êeasily Êrather Êthan Êjust Êavaila ble Êthrough Êweb Êpage. ÊFurther Êmore Ê
we Êhave Êa ÊLogging ÊLayer; Êisit Ê Êused Êto Êlog Êdetails. ÊSupport ÊLayer Êhave Êthe Ê
entity Êclasses Êand Êthe Êframework Êclasses Êthese Êboth Êsupport Êthe Êsystem. ÊThe Ê
system Ê architecture Ê has Ê been Êesdigned Ê keeping Ê in Ê mind Ê the Ê fac Êthat t Ê the Ê
system Êmight Êbe Êexpanded Êin Êthe Êfut,ure Êto Êminimize Êthe Êcomplexity Êand Êto Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 31 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
keep Êthe Êexpansion Êsimple Ê for Êthe Êsystem, Êthe Êsystem Êhas Êbeen Êdivided Êinto Ê
layers. Ê
 Ê
Deployment ÊDiagram Ê
 Ê
<<Backup ÊServer>>
<<server>>
<<Client ÊPC>>
HTTP
<<browser>>
*
* *
*
:IE/ ÊFireFox/ Ê
:SFD
Safari/Chrome/ Ê
:SFD
*
*
HTTP
<<DB ÊServer>>
<<database>>
*
:MySQL Ê
*
*
<<Backup ÊDB ÊServer>>
*
<<databse>>
:MySQL Ê
 Ê
Figure Ê20: ÊPossible Êdpl e oyment Êdiagram Ê
 Ê
Deployment Êdiagram Êshows Êa Êpossible Êdeployment Êfor Êthe Êsystem. ÊIbt Êeen Ê has Ê
designed Êkeeping Êin Êmind Êthat Êthe Ê some Êof Êthe Êno-???nfunctional Êrequirements Ê
are Êmet. ÊBoth Êthe Êdatabase Êserver Êand Êhosting Êserver Êhas Êa Êbackup Êin Êcase Ê
anyone Ê of Ê the Êerv s er Ê goes Ê down. Ê It Ê is Ê also Ê necessary Ê to Ê have Ê mirrored Ê
databases. Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 32 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Consider Êthe Êsystem Êthat Êis Êcurrently Êthe Êdevelopment Êsystem Êfor Êthe Êproject. Ê
For Êthis Êmy Êlaptop Êis Êthe Êserver Êfor Êthe ÊSFD Êsystem Êas Êwell Êas Êthe Êdatabase Ê
server. ÊIf Êmy Êsystem Êcrashes ÊI Êwill Ê not Êbe Êable Êto Êaccess Êany Êof Êthe Êweb Ê
services. Ê But Ê let Ê us Ê assume Ê we Ê have Ê a Ê backup Ê but Ê the Ê sde Ê atab is Êa not Ê
mirrored. ÊSo Êthe Ê backup Êstarted Êserving Êthe Êrequests, Êthe Êinformation Êon Êthe Ê
backup Êdatabase Êis Êout -???dated, Êwhy? ÊBecause Êthe Êbackup Êdatabase Êwas Ênot Ê
mirrored Êwith Êthe Êmain Êserver Êthe Êinformation Êwas Ênever Êupdated, Êhence Êthe Ê
information Êis Êlost ÊHenc . e Êit Êis Êimportant Êto Êhave Êmirrored Êdatabas Êes.
 Ê
Database ÊSchema Ê:
Entity-???Relationship ÊModel: Ê
 Ê
 Ê
Figure Ê21: ÊERM Êmodel Êof Êthe Êdatabas Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê e Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Source Ê[4] Ê
 Ê
Above Êimage Êshows Êthe ÊERM Êdiagram Êof Êthe Êdatabase Êthat Êthe Êsystem Êis Ê
developed Êfor, Êit Êoutlines Êall Êthe Êtables Êand Êtheir Êrelatio ÊT nshe Ê . class Êchoices Ê
that ÊI Êmade Êduring Êthe Êimplementation Êwere Êbased Êon Êthis Êmodel. ÊAs Êit Êhas Êa Ê
Protein, ÊGenome, ÊTree Ê table Êthat Êholds Êthe Êrespective Êinformation Êabout Êthe Ê
relation. ÊThe Êsystem Êhas Êthese Êclasses Êas Êwell, Êwhich Êperform Êthe Êfunctionality Ê
related Êto Êthese Êtables. ÊWe Ê also Êhave Êtree Êgraph Êclass Êin Êthe Êsystem, Êwhich Ê
uses Êthe Êfunctionality Êin Êthe Êtree Êclass Êand Êmanipulates Êthe Êdata Êto Êform Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 33 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
binary Êtree Êvisualization. ÊMoreover Êwe Êhave Êass, Êcomb Êand Êlen Êcomb Êwhich Ê
holds Êstatics Êdata Êabout Êproteins Êand Êgenomes Ê.
Guidelines, ÊStandards Ê& ÊTemplates Ê
Coding ÊStandards Ê Ê
¥ Object Êoriented Êapproach Ê
o Classes Ê Ê
o Functions Ê
o 3-???Tier ÊArchitecture Ê Ê
¤? Controller ÊClasses Ê
¤? Interface ÊClasses Ê
¤? Entity ÊClasses Ê
Data ÊNaming ÊStandard Ês
I Êhave Êfollowed Êthose Ênames Êthat Êsatisfy Êthe Ê"?name Êfor Êclarity"? Êobjec Êtive. ÊThis
approach Êsays Êthat Êall Êthe Ênames Êshould Êhave Êa Êconcise, Êdescriptive Êdefinit Ê ion.
Development ÊTool ÊStandard Ês
Throughout Êthe Êproject, ÊI Êhave Êused Êthe Êfollowing Êto Êols: Ê
¥ Eclipse ÊÐ ÊFor Êdevelopment Êpurpos Êe
¥ MySQL Ê-??? ÊFor ÊDatabase. Ê Ê
¥ Apache ÊÐ ÊFor Êhosting Êthe Êwebsitand e Ê Êweb Êservice Ê
Documentation ÊStandards Ê
Documentation Ê standards Ê have Ê been Ê followed Ê by Ê Roger Ê S. Ê PressmenÕs Ê
Software Ê Engineering: Ê A Ê Practitioner'?s Ê Approach. Ê Moreover, Ê few Ê of Ê the Ê
sample Ê templates Ê are Ê also Ê downloaded Ê from Ê the Ê internet; Ê IEEE Ê standard Ê
documents Êare Êmostly Êopted Ê. Ê
 Ê
Document ÊName Ê Descriptions Ê Standards Ê and Ê
Guidelines Ê
Use ÊCase ÊModel Ê Analysis Ê Modeling Ê based Ê on Ê the Ê UML Ê
Sequence ÊDiagrams Ê artifacts Êof ÊUML Ê Ê
 Ê
Software ÊArchitecture Ê Modeling Ê of Ê Analysis Ê into Ê Design Ê UML Ê
Deployment ÊDiagram Ê Ê Phase Ê
Table Ê4: ÊDocumentationSt Ê andards Ê
Standards Ê have Ê been Ê used Ê to Ê ensure Ê that ev Êeryone Ê understands Ê all Ê the Ê
documents. ÊIn Êan Êevent Êwhen Êexpansion Êo Êfthe Êcurrent Êsystem Êis Êrequired Êany Ê
developer Êwill Êbe Êable Êto Êeasilynd Êuerstand Êand Êchange Êthe Êsyem st Êaccording Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 34 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
to Êthe Êrequirements Ê.These Êstandards Êalso Êensure Êthat Êthe Êsystem Êhave Êbeen Ê
built, Êdesigned Êand Êtested Êproperly Êand Êhence Êthe Êchance Êof Êfailure Êred Ê uces.
 Ê
Testing Êstandards Êare Êalso Êused Êto Êdocument Êthe Êtests Êdone Êon Êthe Êsystem Êthe Ê
unit Êtesting Êhas Êbeen Êdone Êon Êthe Êsystem Êto Êensure Êeach Êunit Êof Êsource Êis Ê
working Êin Êaccordance Êwith Êthe Êrequirement Êeach Êof Êthe Êunits Êhave Êbeen Ê
tested Êtwice Êto Êensure Êsystem Êdoes Ênot Êhave Êa Êbug. ÊEach Êof Êthe Êunits Êhas Êbeen Ê
tested Êseparately Êand Êthe Êfinal Êtesting Êresult s Êare Êshown Êbelow. Ê
Testing Ê
SFB Êtesting Êactivity Êincludes Êfollowing Êtesting Êstrategies Ê Ê
Unit ÊTesting Ê
¥ How ÊÐ ÊMake Êshort Êtest Êmethods Êto Êtest Êthe Êcode Êat Êdifferent Êlev Ê els Ê
¥ When ÊÐ ÊUnit Êtesting Êwas Êdone Êsimultaneously Êwith Êthe Êdevelopment Ê
of Êsmall Êunits. Ê Ê Ê Ê
¥ Why ÊÐ ÊTo Êassure Êthat Êall Êthe Ê individual Êunits Êof Êsource Êcode Êare Êfit Êfor Ê
use. Ê
¥ On ÊWhat Ê Ð ÊOn Êevery Êindividual Êunit Êof Êthe Êsource Êc Êode Ê
¥ Test ÊIterationsÐ Ê ÊTwo ÊIterations Ê
 Ê
Class ÊName Ê Assignment Ê
Method ÊName Ê getAssByProteinId Ê
Test ÊClass ÊNam Êe AssignmentTest Ê
Test ÊMethod ÊName Ê getAssByProteinId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Êprotein ÊID Ê Valid ÊProtein Ê Valid ÊProtein Ê True Ê Pass Ê None Ê
ID Ê ID Ê
 Ê
Class ÊName Ê Assignment Ê
Method ÊName Ê getCombinationByTaxonomyAndProteinId Ê
Test ÊClass ÊNam Êe AssignmentTest Ê
Test ÊMethod ÊNam Êe getCombinationByTaxonomyAndProteinId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Êprotein ÊID Ê Valid ÊProtein ÊValid ÊProtein Ê True Ê Pass Ê None Ê
ID Ê ID Ê
String ÊÐ Êtaxonomy Ê Valid Ê Valid Ê True Ê Pass Ê None Ê
taxonomy Ê taxonomy Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 35 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Class ÊName Ê Combination Ê
Method ÊName Ê getCombinationByTaxonomyAndProteinId Ê
Test ÊClass ÊNam Êe CombinationTest Ê
Test ÊMethod ÊNam Êe getCombinationByTaxonomyAndProteinId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Êprotein ÊID Ê Valid ÊProtein ÊValid ÊProtein ÊTrue Ê Pass Ê None Ê
ID Ê ID Ê
 Ê
Class ÊName Ê Genome Ê
Method ÊName Ê getOrderByProteinId Ê
Test ÊClass ÊNam Êe GenomeTest Ê
Test ÊMethod ÊName Ê getOrderByProteinId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
String ÊÐ Êtaxonomy Ê Valid Ê Valid Ê True Ê Pass Ê None Ê
taxonomy Ê taxonomy Ê
 Ê
Class ÊName Ê Genome Ê
Method ÊName Ê getNameByTaxonId Ê
Test ÊClass ÊName Ê GenomeTest Ê
Test ÊMethod ÊNam Êe getNameByTaxonId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Êtaxon ÊID Ê Valid Ê taxon Ê Valid Ê taxon Ê True Ê Pass Ê None Ê
ID Ê ID Ê
 Ê
 Ê
Class ÊName Ê Genome Ê
Method ÊName Ê getTaxonIdByLeftId Ê
Test ÊClass ÊNam Êe GenomeTest Ê
Test ÊMethod ÊNam Êe getTaxonIdByLeftId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Êtaxon ÊID Ê Valid Ê taxon Ê Valid Ê taxon Ê True Ê Pass Ê None Ê
ID Ê ID Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 36 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Class ÊName Ê Genome Ê
Method ÊName Ê getCombinationByComidandTaxonomy Ê
Test ÊClass ÊNam Êe GenomeTest Ê
Test ÊMethod ÊNam Êe getCombinationByComidandTaxonomy Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Êcomb ÊID Ê Valid Ê comb Ê Valid Ê comb Ê True Ê Pass Ê None Ê
ID Ê ID Ê
String ÊÐ Êtaxonomy Ê Valid Ê Valid Ê True Ê Pass Ê None Ê
taxonomy Ê taxonomy Ê
 Ê
 Ê
Class ÊName Ê Lencombination Ê
Method ÊName Ê getCombinationByCombId Ê
Test ÊClass ÊNam Êe LencombinationTest Ê
Test ÊMethod ÊNam Êe getCombinationByCombId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Êcomb ÊID Ê Valid Ê comb Ê Valid Ê comb Ê True Ê Pass Ê None Ê
ID Ê ID Ê
 Ê
 Ê
Class ÊName Ê Protein Ê
Method ÊName Ê getPorteinBySeqId Ê
Test ÊClass ÊNam Êe ProteinTest Ê
Test ÊMethod ÊName Ê getPorteinBySeqId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
String ÊÐ Êseq ÊID Ê Valid Êseq ÊID Ê Valid Êseq ÊID Ê True Ê Pass Ê None Ê
 Ê
 Ê
Class ÊName Ê Tree Ê
Method ÊName Ê getChildrenByNodeId Ê
Test ÊClass ÊNam Êe TreeTest Ê
Test ÊMethod ÊNam Êe getChildrenByNodeId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Ênode ÊID Ê Valid Ê node Ê Valid Ê node Ê True Ê Pass Ê None Ê
ID Ê ID Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 37 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Class ÊName Ê Tree Ê
Method ÊName Ê getRightIdByLeftId Ê
Test ÊClass ÊNam Êe TreeTest Ê
Test ÊMethod ÊNam Êe getRightIdByLeftId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Êleft ÊID Ê Valid Êleft ÊID Ê Valid Êleft ÊID Ê True Ê Pass Ê None Ê
 Ê
 Ê
Class ÊName Ê Tree Ê
Method ÊName Ê getLeftIdByRightId Ê
Test ÊClass ÊNam Êe TreeTest Ê
Test ÊMethod ÊNam Êe getLeftIdByRightId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Êright ÊID Ê Valid Ê right Ê Valid Ê right Ê True Ê Pass Ê None Ê
ID Ê ID Ê
 Ê
 Ê
Class ÊName Ê Tree Ê
Method ÊName Ê getTaxonIdByNodeId Ê
Test ÊClass ÊNam Êe TreeTest Ê
Test ÊMethod ÊNam Êe getTaxonIdByNodeId Ê() Ê
Input Ê (Method ÊExpected Ê Actual ÊValue Ê Expected Ê Result Ê Error Ê
Parameters) Ê Value Ê Ê Result Ê (Pass Ê / Ê
Fail) Ê
Integer ÊÐ Ênode ÊID Ê Valid Ê node ÊValid Ê node Ê True Ê Pass Ê None Ê
ID Ê ID Ê
 Ê
 Ê
The Ê results Ê of Ê unit Ê testing Ê shows Ê that Ê testing Ê was Ê satisfactory Ê and Ê no Ê
problems Êwere Êdetected Êat Êunit Êtesting Êlevel Êand Êhence Êthe Êsystem Êwill Ênot Ê
face Ê any Ê problems Ê at Ê this Ê lev Êel. Each Ê of Ê the Ê classes Ê have Ê been Ê tested Ê by Ê
creating Êa Êtest Êclass Êfor Êthat Êspecific Êclas , Êand s Êall Êthe Êmethods Êin Êthe Êclass Ê
were Êtested Êfor Êproblem Ês.
 Ê
Different Ê cases Ê were Ê consideredinc Ê luding Ê null Ê values, Ê positive Ê values, Ê
negative Êvalues, Êand Êactual Êvalues. ÊThe Êmethods Êwere Êchanged Êto Êensure Êno Ê
problems Ê arise Êin Ê any Ê of Ê cases ÊI.ntegration Ê testing Ê was Ê also Ê done Ê on Ê the Ê
system. ÊAll Êthe Êmodules Êwere Êtested Êonce Êthey Êwere Êintegrated Ê Êeac with Ê h
other Êto Êform Êthe Êcomplete Êsystem Ê Ê .
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 38 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
User ÊTesting Ê
 Ê
Test Êcase ÊPurpose Ê: To Êcheck Êwhether Êa Êusecar Ên Êtraverse Êthrough Êthe Êtr Êee
Pre Êrequisite Ê: Tree Êvisualization Êwith Êa Ênode Êthat Êhas Êchildr Êen.
Page: Ê Ê TreeGraph Ê
Procedure: Ê 1. Enter Êthe ÊUrl Êin Êthe Êbrow Êser
 Ê 2. Click Êthe Ênod Êe
3. Wait Êfor Êthe Êtree Êto Êpopul Êate
Screenshot Ê Ê
 Ê
 Ê
 Ê
Expected ÊResults Ê: Node Êloaded Ê
Pass/Fail: Ê Pass Ê
 Ê
 Ê
 Ê
Test Êcase ÊPurpoe: s Ê To Êcheck Êwhether Êa Êuser Êcan Êuse Êthe Êtree Êorient Êation
Pre Êrequisite Ê: Tree Êvisualization Ê
Page Ê: Ê Ê TreeGraph Ê
Procedure: Ê 1. Enter Êthe ÊUrl Êin Êthe Êbrow Êser
 Ê 2. Click Êthe Êdesired Êorientatio Ên
3. Wait Êfor Êthe Êtree Êto Êadj Êust
Screenshot Ê Ê
 Ê
 Ê
 Ê
Expected ÊResults Ê: Orientation Êchanged Ê
Pass/Fail: Ê Pass Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 39 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Test Êcase ÊPurpose Ê: To Êcheck Êwhether Êa Êuser Êcan Êchange Êthe Ê Êroot
Pre Êrequisite: Ê Tree Êvisualization Ê
Page: Ê Ê TreeGraph Ê
Procedure: Ê 1. Enter Êthe ÊUrl Êin Êthe Êbrow Êser
 Ê 2. Click Êthe Êset Êas Êroot Êopti Êon
3. Wait Êfor Êthe Êtree Êto Êadj Êust
Screenshot Ê Ê
 Ê
 Ê
 Ê
Expected ÊResults Ê: Root Êchanged Ê
Pass/Fail: Ê Pass Ê
 Ê
 Ê
Test Êcase ÊPurpose Ê: To Ê check Ê whether Ê web Ê service Ê would Ê accept Ê wrong Ê
parameters Ê
Pre Êrequisite Ê: Web ÊService Êavailable Êonlin Êe
Method: Ê Ê getChildrenByNodeId Ê
Procedure: Ê 1. Select Êthe Êmethod Êto Êbe Êced al Êl
 Ê 2. Give Êletter Êinstead Êof Êa Ênumb Êer
Result Ê Ê
Error Êvalidating Êparamete Êr
 Ê
Expected ÊResults Ê: Error Êoccurs Ê
Pass/Fail: Ê Pass Ê
 Ê
Similarly Êmore Êtesting Êwas Êdone Êto Êensure Êthat Êsystem Êdoes Ênot Êbreak Êwhen Ê
user Êis Êusing Êthe Êinteractive Êvisualizatio Ên. Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 40 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Results Ê
Data ÊVisualization Ê
Data Êvisualization Êis Êthe Êkey Êin Êthis Êproject Êand Êthe Êtechnique Êdeveloped Ê
above Êhas Êbeen Êused Êto Êimplement Êthe Êsystem, Êwhich Êallows Êuser Êto Êhave Êa Ê
different Êand Êmore Êeffective Êmethod Êto Êvisualize Êlarge Êamount Êof Êdata. ÊThe Ê
result Êof Êth e Êimplementation Êgives Êa Êgood Êidea Êabout Êhow Êa Êuser Êcan Êvisualize Ê
the Êdata. Ê Ê
 Ê
I Êhave Êimplemented Êtwo Êdifferent Êvisualizations Êto Êconsider Êthe Êpossibilities Ê
of Ê this Ê technique Ê being Ê applied Ê on Ê data Ê from Ê any Ê other Ê field. Ê The Ê first Ê
implementation Êis Êfor Êa Êtree Êgraph. ÊAs Êthe Êtree Êhas Êmore Êthan Ê3000 Ênodes Ê
visualizing Ê it Ê becomes Ê a Ê problem. Ê Graph Ê implemented Ê focuses Ê on Ê data Ê
visualization Êand Êgives Êuser Êthe Êoption Êto Êview Êthe Êdata Êas Êhe Êd Êesires.
 Ê
 Ê
Figure Ê22: ÊTree ÊOrientation Êin ÊSF ÊD
To Êaccomplish Êthis Êtree Êorientation Êfeature Êis Êthere Êwhich Êallows Êthe Êtree Êto Êbe Ê
displayed Êin Êfour Êdifferent Êway , Êus s er Êcan Êchange Êthe Êorientation Êof Êtree Êto Ê
left, Êtop, Êbottom Êand Êright Ê .
 Ê
Figure Ê23: ÊResults Êof ÊTree ÊOrientatio Ên
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 41 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
Figure Ê23 Êshows Êdifferent Êtree Êorientations Êthat Êa Êuser Êcan Êselect Êfrom. ÊTree Ê
orientation Êcan Êeven Êbe Êdone Êonce Êthe Êgraph Êis Êloaded. ÊAllowing Êuser Êto Êview Ê
data Êin Êany Êorientation Êwithout Êeven Êrefreshing Êa ÊpT agree Ê e. Êcan Êbe Êadjusted Ê
at Êany Êp oint Êregardless Êof Êany Êdepth Êof Êthe Êtree Êthe Êis us Êer Ê at. ÊThe Ênodes Ê
allows Êuser Êto Êtraverse Êthrough Êthe Êtree. ÊThe Ênode Êselected Êis Êbrought Êto Êthe Ê
center Êso Êthat Êthe Êuser Êcan Êvisualize Êboth Êportions Êof Êtree Êahead Êand Êthe Êpoint Ê
from Êwhere Êhe Êgot Êto Êthe Êno Êde.
 Ê
 Ê
Figure Ê24: ÊResults Êof Êtraversing Êthrough Êt Êree
As Êthe Êtechnique Êfocuses Êon Êtargeting Êhuge Êamount Êof Êdata Êthe Êgraph Êshows Ê
only Êthe Ênodes Êthat Êve ha Êbeen Êrequested Êby Êthe Êuser. ÊIf Êthe Êuser Êreaches Êa Ê
point Êwhere Êthey Êdo Ênot Êsee Êany Êurt f her Ênodes Êthey Êcan Êselect Êthe Êlast Ênode Êto Ê
load Êthe Ênext Êset Êof Ênodes. ÊOnce Êthe Ênodes Êhave Êbeen Êloaded Êthe Êcenter Êis Ê
adjusted Êagain Êto Ênode Êselect Êallowing Êuser Êto Êview Êthe Ênewly Êloaded Ênodes. Ê
This Êis Êdone Êthrough ÊAJAX Êso Êthat Êonce Êthe Êuser Êstartssualize Ê Êto Êvi the Êdata Êhe Ê
does Ênot Êhave Êto Êrefresh Êor Êreload Êthe Êp ÊTag he Ê e. data Êthat Êis Êloaded Êaggregates Ê
with Êthe Êalready Êloaded Êgraph Êgiving Êuser Êmore Êinformation Êbut Êstill Êonly Êthe Ê
information Êthat Êthe Êuser Êrequires. ÊSo Êa Êuser Êcan Êmove Êfrom Êlevel Ê1 Êoe Ê f Êthe Être
to Êlevel Ê10 Êand Êstill Êonly Êsee Êthe Êinformation Êuser Êwishes Êto. ÊThis Êonly Êdoes Ênot Ê
allow Êuser Êto Êskip Êa Êlot Êof Ênodes Êthat Êare Ênot Êimportant Êfor Êthe Êus alser Ê o Êbut Ê
gives Ê a Ê lot Ê more Ê space Ê to Ê the Ê user Ê to Ê load Ê more Ê nodes Ê and Ê still Ê have Ê a Ê
visualization Ê which Ê porvides Ê the Ê information Ê in Ê a Ê manner Ê that Ê can Ê be Ê
understood Êeasily. Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 42 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
Figure Ê25: ÊResults Êof Êpat Êh
It Êcan Êbe Êimportant Êsometimes Êto Êknow Êhow Êyou Êmanaged Êto Êget Êto Êthe Ê
position Êat Êwhich Êyou Êare Ênow Êin Êthe Êtree, Êif Êyou Êare Ê20 Êor Êvm elso Êre Ê deep le . Ê
This Êvisualization Êkeeps Êtrack Êof Êthe Êyour Êpath Êand Êchanges Êthe Êcolor Êof Êthe Ê
nodes Êto Êyellow Êthrough Êwhich Êyou Êmanage Êto Êget Êto Êthe Êpoint Êyou Êare Êat Ê
now. ÊEnsuring Êthat Êyou Êdo Ênot Êloose Êthe Êway Êto Ênode Êat Êhand Êat Êany Êpoint Ê
during Êthe Êvisualizatio n Êexperience Êprovided. ÊEven Êloading Ênew Ênodes Êdoes Ê
not Êaffect Êthe Êpath. Ê
 Ê
 Ê
Figure Ê26: ÊResults Êfor Êchanging Êro Êot
 Ê
Sometimes Êwhen Êresearching Êit Êis Êrequired Êthat Êyou Êhave Êa Êfresh Êlook Êat Ê
things, Êa Ênew Êperspective Êthat Êcan Êenable Êytoo Êu Ê consider Êpossibilities Êyou Êdid Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 43 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
not Êthink Êof Êbefore. ÊThe Êvisualization Êmethod Êtries Êto Êachieve Êthis Êby Êletting Ê
the Êuser Êselect Êthe Êroot Ênode Êhe Ê if Êwishes Êto. ÊThe Êactual Ê root Êis Êselected Êby Ê
default, Êif Êthe Êuser Êwants Êto Êchange Êthe Êroot Ênode Êand Êcons ooidker Ê ingl Êat Êthe Ê
information Êfrom Êa Êdifferent Êpoint Êof Êview Êuser Êcan Êdo Êso Êjust Êby Êselecting Êthe Ê
set Êas Êroot Êoption Êand Êselecting Êthe Ênode Êto Êconvert Êto Êroot. ÊThis Êprocess Êalso Ê
does Ênot Êrequire Êuser Êto Êrefresh Êor Êreload Êthe Êpage Êso Êuser Êcan Êenjoy Êhassle Ê
free Êvisualization Êexperience. Ê
 Ê
 Ê
Figure Ê27: ÊTree Êimplementation Ê
This Êgraphs Êenables Êdifferent Êand Êmore Êeffic enti Êmethod Êto Êvisualize Êhuge Ê
amount Êof Êdata. ÊGiving Êuser Êthe Êfreedom Êto Êselect Êthe Êdata Êhe Êwant Êand s Êview Ê
as Êhe Êwants Êto Êview Ê by Êselecting Êthe Êtree Êorientation, Êit Êstores Êthe Êpath Êso Êuser Ê
knows Êhow Êhe Êgot Êto Êthe Êposition Êeven Êat Êa Êdepth Êof Ê50 Êlevels Êand Êfinally Êit Ê
allows Êuser Êto Êview Êthe Êdata Êin Êa Êway Êhe Êwould Ênot Êhave Êbefore Ê angbing y Ê Êch
the Êroot Ênode. Ê
 Ê
 Ê
 Ê
Figure Ê28: ÊCurrent Êimplementation Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Source Ê[5] Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 44 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
This Ê is Ê n a Êimplementation Ê showing Ê results Ê about Ê a Ê combination Ê being Ê
repeated Êin Êdifferent Êgenomes. ÊThe Êlist Êgoeno f Ê mes Êgoes Êon , Êthis Êis Êpart Êof Êthe Ê
results. ÊYes Êviewing Êthe Êdata Êin Êthis Êmanner Êgives Êthe Êinformation Êclearly Êbut Ê
if Êyou Êwant Êto Êdetect Êpatterns Êand unus Ê ual Êchanges Êitwo Ê uldnÕt Êbe Êeasy Êif Êthe Ê
list Êwere Êtoo Êlong Êinstead Êhaving Êa Êvisualization Êof Êthe Êdwo ata Ê uld Êimprove Ê
that. Ê
 Ê
Figure Ê29: ÊResult Êof Êimproved Êvisualizatio Ên
 Ê
The Êsecond Êgraph Êfocuses Êmore Êhow Êthe Êdata Êcan Êbe Êdisplayed Êin Êa Êmore Ê
simple Êvisualization Êyet Êthe Êinformation Êis Êpresented, Êas Êthe Êuser Êwant Ês Êit.
Again Êthe Êamount Êof Êdata Êis Êhuge Êand Êhence Êmaking Êsim Êaple Êvisualization Êis Ê
difficult Êto Êkeep Êboth Êthe Êinformation Êand Êa Êgood Êvisualization Êexperience. Ê
Above Êimage Êshows Êa Êstacked Êbar Êchart Êwith Êa Êlot Êof Êinformation, Êas Êit Êis Ê
required Êto Êcompare Êdifferent Êgenomes, Êhence Ê Êens toure Êthat Êall Êinformation Êis Ê
retrieved Êand Êshowed Êbut Êstill Êis Êeasy Êto Êunderstand, Êmany Êoption Êare Êtheir Ê
for Êuser Êto Êchange Êthe Êinformation Êas Êhe Êdes Êires.
 Ê
 Ê
 Ê
Figure Ê30: ÊFeature Êof Êimproved Êvisualizatio Ên
 Ê
Above Êimage Êshows Êthatthe Ê Ê user Êcan Êroll Êover Êat Êany Êpoint Êin Êgraph Êand Êit Ê
shows Êthe Êexact Êvalue Êand Êgenome Êthat Êthe Êvalue Êis Êfor Êso Êthat Êthe Êinformation Ê
can Êbe Êextracted Êeasily Êeven Êif Êthe Êdata Êis Êa Êlo Ê t.
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 45 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
Figure Ê31: Êselect/deselect Êgenome Êin Êimprovevi ds Êualization Ê
User Êalso Êhas Êthe Êability Êto Êselect/deselect Êthe Êgenomes Êwhich Êhe Êdoes Ênot Ê
want, Êjust Êby Êclicking Êat Êthe Êgenomes Êwould Êmake Êthem Êgrey Êand Êremoving Ê
the Êdata Êfrom Êthe Êchart Êso Êthe Êuser Êcan Êeasily Êsort Êout Êthe Êgenome Êhe Êfinds Êare Ê
not Êrequired Ê.
 Ê
 Ê
Figure Ê32: ÊFeature Êof Êimproved Êvisualizatio Ên
 Ê
Sometimes Êyou Êwant Êthe Êdata Êand Êwould Êlike Êto Êstore Êit. ÊThe Êgraph Êhas Êan Ê
option Êon Êtop Êof Êit Êallowing Êthe Êperson Êto Êsave Êthe Êgraph Êas Êa ÊPNG, ÊJPEG, Ê
SVG Êvector Êimage Êor Êa ÊPDF Êdocument Enab . Ê ling Êuser Êto Êkeep Êthe Êdata Êfor Ê
further Êresearch. ÊIf Êrequire d Êthe Êsecond Êoption Êallows Êuser Êto Êprint Êthe Êgraph Ê
directly Êfrom Êthe Êweb Ê.
 Ê
Graphs Êshown Êabove Êrepresent Êthe Êhuge Êquantities Êdoat f Êa, Êwhich Êis Ênot Êonly Ê
non-???homogenous, Êit Êalso Êscales Êin Êa Êno -???linnear Êway Êin Êplaces, Êand Êthe Êrelative Ê
importance Ê is Ê biological Ê and Ênot Ênumerical. ÊThese Ê graphs Ê convey Ê the Ê
information, Êwhich Êwould Êbe Êvery Êhard Êfor Êa Êresearcher Êso Êsee Êif Êjust Êraw Êdata Ê
was Êprovided, Êas Êjust Êlooking Êat Ênumbers Êwould Ênot Êhelp. ÊThis Êgrapeshs Ê Êtotri Ê
achieve Êthe Êconcept Êof ÊÔA Êpicture Êis Êworth Êa Êthousand Êwords.Õ ÊBy Êshowing Êa Ê
graph Êthat Êrepresents Êsuch Êa Êdata Êin Êa Êscientifically Êmeaningful Êmanner. Ê
 Ê
The Êvisualizations Êimplemented Êcan Êbe Êcomposed Êtogether Êso Êthat Êthe Êuser Ê
can Êclick Êon Êthe Êgenome Êin Ê he Êttree Êvisualization Êand Êbe Êtaken Êto Êthe Êgraph Ê
comparing Êthem. ÊThis Êcan Êbe Êimplemented Êjust Êby Êmaking Êa Ênew Êhtml Êpage Ê
and Êrequesting Êboth Êthe Êservices Êthat Êhave Êalready Êbeen Êimplement Ê ed.
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 46 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Web ÊServices Ê
These Êwere Êthe Êresults Êof Êthe Êdata Êvisualization Êpf Ê artt Êhe Ê o system. ÊNow Êwe Ê
move Êon Êto Êthe Êweb Êservices. ÊMany Êfunctions Êare Ênow Êavailable Êon Êthe Êweb Ê
allowing Êthe Êuser Êto Êget Êdata Êin Êa Êstandard Êformat. ÊNow Êlets Êconsider Êan Ê
example, Êthe Êtree Êgraph Êthat Êwas Êdiscussed Êabove Êshowed Êsome Ênodes Êwith Ê
names Êon Êit Êor Ênu ll. ÊThey Êall Êalso Êhave Êan Êid Êthat Êcan Êbe Êused Êin Êa Êcertain Ê
manner Êto Êmanipulate Êthe Êdata. ÊSo Êhere ÊI Êshow Êthe Êrequest Êand Êresponse Ê
envelope Êof Êsoap Êto Êthe Êservice Êif Êyou Êrequest Êchildren Êof Êa Êcertain Ênode. ÊIn Ê
this Ê case Ê that Ê node Ê is Ê ÊT 1.he Ê method Ê that Ê we Ê cl Êalfrom Ê web Ê service Ê is Ê
getChildrenByNodeId. Ê
Request: Ê
<soapenv:Envelope Ê Ê Ê
 Ê Ê xmlns:q0="?http://DefaultNamespace"? Ê Ê Ê
 Ê Ê xmlns:soapenv="?http://schemas.xmlsoap.org/soap/envelope/"? Ê Ê Ê
 Ê Ê xmlns:xsd="?http://www.w3.org/2001/XMLSchema"? Ê Ê Ê
 Ê Ê xmlns:xsi="?http://www.w3.org/200 1/XMLSchema-???instance"?> Ê Ê Ê
 Ê Ê <soapenv:Header> Ê Ê Ê
 Ê Ê </soapenv:Header> Ê Ê Ê
 Ê Ê <soapenv:Body> Ê Ê Ê
<q0:getChildrenByNodeId> Ê
 Ê Ê <q0:NodeId>1</q0:NodeId> Ê
</q0:getChildrenByNodeId> Ê
 Ê Ê </soapenv:Body> Ê Ê Ê
</soapenv:Envelope> Ê Ê Ê
Listing Ê8: ÊSOAP Êreques Êtfor Êchild Ênode Ês
The Êrequest Êenvelope Êsends Êthe Ênode Êfor Êwhich Êyou Êneed Êthe Êchildren Êto Êthe Ê
database. ÊIn Êthis Êcase Ê1 Êis Êsent Êto Êthe Êserver Êfor Êwhich Êin Êthe Êres , Êchild pons ren Ê e
are Êreturned Ê.
Response Ê
<soapenv:Envelope Ê
xmlns:soapenv="?http://schemas.xmlsoap.ogr/soap/envelope/"? Ê
xmlns:xsd="?http://www.w3.org/2001/XMLSchema"? Ê
xmlns:xsi="?http://www.w3.org/2001/XMLSchem-???ainstance"? Ê>
 Ê Ê Ê <soapenv:Body> Ê
 Ê Ê <getChildrenByNodeIdResponse Êxmlns="?http://DefaultNamespace"? Ê >
 Ê Ê <getChildrenByNodeIdReturn>1684</getChildrenByNodeIdReturn> Ê Ê
 Ê Ê <getChildrenByNodeIdReturn>2</getChildrenByNodeIdReturn> Ê Ê
 Ê Ê <getChildrenByNodeIdReturn>2</getChildrenByNodeIdReturn> Ê Ê
 Ê Ê <getChildrenByNodeIdReturn>-???1</getChildrenByNodeIdReturn> Ê Ê
 Ê Ê </getChildrenByNodeIdResponse> Ê
 Ê Ê </soapenv:Body> Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 47 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê Ê </soapenv:Envelope> Ê
Listing Ê9: ÊSOAP Êresponse Êfor Êchild Ênod Êes
Now Êas Êwe Êremember Êall Êthe Ênodes Êhad Ênames Êon Êthem, Êto Êget Êthe Ênames Êyou Ê
need Êthe Êtaxon Êid. ÊSo Êin Êthe Êresponse Êyou Êsee Ênodes Êand Êtaxon Êids, Êfor Êeach Ê
node. Ê1684 Êis Êfirst Ênode Êid, Êandis Ê Ê2 Ê the Êtaxon Êid Êfor Êthat Ênode, Ê2 Êis Êanother Ê
node Êfor Êwhich Êtaxon Êid Êis -???1. Ê Ê
 Ê
 ÊThe Êstructure Êfollowed Êin Êthe Êreturn Êfrom Êthe Êfunction Êis Ê
 Ê
<node Êid>first Ênode<node Êid Ê>
<taxon Êid>taxon Êid Êfor Êfirst Ênode<taxon Êid Ê >
<node Êid>second Ênode<node Êid Ê>
<taxon Êid>taxon Êi d Êfor Êsecond Ênode<taxon Êid Ê>
 Ê
Now Êthat Êwe Êhave Êthe Ênode Êid Êand Êthe Êtaxon Êidwan , Êwe Ê t Êthe Êname Êof Êthe Ê
node. ÊFor Êthat Êwe Êagain Êhave Êto Êcall Êthe Êweb Êservice Êin Êthis Êcase Êwe Êrequest Ê
the Êname Êof Ênode Ê1 Êwhich Êis Ê1684 Êwhere Êtaxon Êid Êis Ê2. ÊThe Êmethod Êwe Êuse Êfor Ê
this Êis ÊgetNameByTaxonId . Ê
 Ê
Request Ê
<soapenv:Envelope Ê Ê Ê
 Ê Ê xmlns:q0="?http://DefaultNamespace"? Ê Ê Ê
 Ê Ê xmlns:soapenv="?http://schemas.xmlsoap.org/soap/envelope/"? Ê Ê Ê
 Ê Ê xmlns:xsd="?http://www.w3.org/2001/XMLSchema"? Ê Ê Ê
 Ê Ê xmlns:xsi="?http://www.w3.org/2001/XMLSchem-???ainstance"?> Ê Ê Ê
 Ê Ê <soapenv:Header> Ê Ê Ê
</soapenv:Header> Ê Ê Ê
 Ê Ê <soapenv:Body Ê Ê
<q0:getNameByTaxonId> Ê
 Ê Ê <q0:taxonId>2</q0:taxonId> Ê
</q0:getNameByTaxonId> Ê
</soapenv:Body> Ê Ê Ê
</soapenv:Envelope> Ê Ê Ê
Listing Ê10: ÊSOAP Êrequest Êfor Êname Êby Êtaxon ÊID
The Êrequest Êenvelope Êshows Êthat Êthe Êcall Êhas Êbeen Êmade Êwith Êthe Êtaxon Êid Ê2 Êto Ê
the Êmethod ÊgetNameByTaxonId Ê. Ê
 Ê
Response Ê
 Ê<soapenv:Envelope Ê
xmlns:soapenv="?http://schemas.xmlsoap.org/soap/envelope/"? Ê
xmlns:xsd="?http://www.w3.org/2001/XMLSchema"? Ê
xmlns:xsi="?http://www.w3 .org/2001/XMLSchema-???instance"? Ê>
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 48 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
<soapenv:Body> Ê
<getNameByTaxonIdResponse Êxmlns="?http://DefaultNamespace"? Ê >
<getNameByTaxonIdReturn>bacteria</getNameByTaxonIdReturn> Ê Ê
</getNameByTaxonIdResponse> Ê
</soapenv:Body> Ê
</soapenv:Envelope> Ê
Listing Ê11: ÊSOAP Êresponse Êfor Êname Êby Êtaxon ÊID
The Êresponse Êenvelope Êgets Êus Êthe Êname Êof Êthe Ênode Êby Êthe Êtaxon Êid, Êhere Êthe Ê
name Êwe Êgot ÊisÔb ÊacteriaÕ Êwhich Êis Êthe Êname Êfor Ênode Ê1, Êwhose Êid Êwas Ê1684 Ê
and Êtaxon Êid Êwas Ê2. Ê
 Ê
This Êwas Êa Êsimple Êexample Êthat Êexplained Êhow Êa Êweb Êservice Êcould Êbe Êused Ê
for Êmanipulating Êdat. Ê a Now Êthe Êadvantages Êfor Êresearchers Êare Êa Êlot Êas Êthey Ê
can Êget Êstatistics Êof Êgenomes, Êproteins, Êcomplete Êhierarchy Êand Êa Êlot Êmore Ê
information Êin Êa Êstandard Êform. ÊSo Êthey Êcan Ênow Êeasilyt Êhat us Êe Ê information Ê
and Êimplement Êtheir Êtechniques Êon Êthe Êdata Êto Êprocess Êfurther. ÊThe Êmethod Êof Ê
screen Êscrapping Êwould Ênot Êbe Êrequired Êonce Êthe Êweb Êservice Êis Êavailab Ê le.
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 49 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Critical ÊEvaluation Ê
This Êproject Êis Êmostly Êbased Êon Êdata Êvisualization Êand Êhenc he Êe Ê bes t t Êway Êto Ê
judge Êwhether Êthe Êvisualization Êis Êbetter Êor Ênot Êwas Êto Êask Êpeople. ÊI Êcarried Ê
out Êthis Êon Êa Êsmall Êgroup Êof Êpeople, Êthey Êused Êthe Êapplication Êand Êthey Êwere Ê
asked Êto Êanswer Êa Êcouple Êof Êquestsio Êbnased Êon Êthe Êvisualization. ÊThey Êwere Ê
first Êasked Êto Êview Êthe Êdata Êusing Êtche Ê urrent Êvisualizations Êand/or Êraw Êdata, Ê
and Ê than Ê asked Ê to Ê view Ê the Ê same Ê in Ê tvhe Ê isualization Êdeveloped Ê in Ê this Ê
project. ÊThey Ê were Ê to Ê judge Ê whether Ê the Ê data Ê that Ê is Ê being Ê displayed Ê is Ê
meaningful, Êand Êshows Êthe Êinformation Êtheyis Êh Ê wto Êsee. ÊThey Êwere Êasked Êto Ê
judge Ê based Ê on Ê the Ê information Ê they Ê see Ê in Ê raw Ê data Ê and/or Ê in Ê previous Ê
visualization. Ê Ê
 Ê
 Ê
Figure Ê33: ÊEvaluation ÊResults Ê1 Ê
 Ê
The Êresult Êof Êthe Êfirst Êquestion Êwas Êsatisfactorymost Êas Ê Êof Êthe Êpeople Êthought Ê
the Êvisualization Êwas Êbetter Ê than Êthe Êviewing Êraw Êdata Êor Êthe Êcurrent Êmethod Ê
of Êvisualization. ÊOnly Êsmall Êportion Êof Êthe Êpeople Êsaid Êthat Êthis Êwas Ênot Êbetter Ê
they Êwere Êasked Êto Êcomment Êon Êit. ÊSo ÊI Êcould Êget Êa Êbetter Êidea Êabout Êwhy Êthey Ê
did Ênot Êprefer Êtish Êvisualization. Ê
 Ê
If Ênot Êplease Êcommen Êt
Most Êof Êthe Êcomments Êon Êthis Êwere Êregarding Êthe Êfact Êthat Êthey Êare Êfine Êwith Ê
current Êvisualizations Êand Êwould Ênot Êlike Êthem Êto Êchange. ÊSome Êcomments Ê
show Êthat Êthey Êdid Ênot Êwant Êany Êkind Êof Êchange Êto Êvisualizat . ÊAio s Êns some Ê
people Êare Ênot Êopen Êto Êchanges Êthis Êcan Êbe Êreason Êfor Êthis Êas Ê Êwell.
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 50 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
Figure Ê34: ÊEvaluation Êresults Ê2 Ê
 Ê
Again Êthe Êresultswere Ê Êsatisfactory Êas Êmost Êof Êthe Êpeople Êanswered Êthat Êthey Ê
would Ê use Ê the Ê visualization Ê if Ê provided Êline Ê on whereas Êa Ê comparatively Ê
smaller Êportion Êsaid Êthey Êwould Ênot Êprefer Êusing Êthis Êvisualization Êif Êit Êwas Ê
provided Êonline. Ê
 Ê
 Ê
Figure Ê35: ÊEvaluation ÊResults Ê3 Ê
 Ê
The Êmost Êimportant Êquestion Êwas Êto Êknow Êwhether Êthe Êgraph Êshows Êwhat Ê
needs Êto Êbe Êshown. Ê Students Êof Êcomputer Êscienc Êewere Êsatisfied Êwith Êthe Ê
information Êshown Êand Êfelt Ênothing Êimportant Êwass Êt Êloif Êcompared Êto Êraw Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 51 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
data. Ê Making Ê this Ê overall Ê a Ê better Ê approach Ê than Ê currently Ê available Ê
approaches. Ê
 Ê
After Êlooking Êat Êall Êthe Êressult Êtogether, ÊI Êcan Êconclud e Êthat Êpeople Êdo Êprefer Ê
this Êsystem, Êbut Êstill Êthere Êis Êroom Êfor Êimprovement Êas Êsome Êanswered Êthey Ê
would Ê not Ê prefer Ê to Ê use Ê this Ê visualization Ê that Ê may Ê be Ê because Ê the Ê are Ê
satisfied Êwith Êthe Êcurrent Êmethod. ÊAs Êthe Êvisualization Êry is Ê Êvdeifferent Êfrom Ê
currently Êimplemented Êvisualization, Êthis Êcan Êbe Êa Êreason, Êas Êpeople Êgenerally Ê
do Ênot Êlike Êchange. ÊImplementing Êthe Êsystem Êusing Êthe Êcurrent Êvisualization Ê
methods Êand Êintroducing Êthese Êfeatures Êin Êthose Êvisualizations Êcould Êresult Êin Ê
a Êbetter Êsystem Ê.
 Ê
Problems Êthat Êcaused Êthe Êlimitatio Ên
The Êvisualizations Êdeveloped Êin Êthe Êproject Êare Êlimited Êbut Êcan Êbe Êexpanded Ê
using Ê the Ê technique Ê defined Ê above. Ê Visualizations Ê developed are Ê Êlimited Ê
because Êat Êfirst Êthe Êrequirements Êgiven Êwere Êambiguous; Ê th Ê wia Êcomplex Ê
database Êthat Êwas Êso Êproblem Êspecific Êthat Êit Êrequired Êthe Êadvisors Êdomain Ê
knowledge Êfor Êany Êinterpretation. Ê After Êgetting Êto Êknow Êthe Êdatabase Êand Ê
understanding Êwhat Êwas ÊrequiredI. Ê Êstarted Êwith Êdes gining Êand Êdeveloping Ê
the Êsystem. ÊAfter Êthe Êsystem Êwas Êdesigned Êand Êready Êim to Êplement ÊI Êwas Ê
faced Êwith Êmore Êquestions Êrequiring Êdomain Êknowledge Êof Êthe Êad Êvto Ê isor
understand Êthe Êtaxonomies Êand Êtypes Êof Êgenomes Êthat Êwould Êbe Êsearc Ê hed.
I Ênow Êhave Êthe Êdomain Êknowledge Êin Êthe Êweb Êserv struc ice Êture; Ênow Êthat Êthe Ê
web Ê services Ê have Ê been Ê created Ê the Ê future Ê implementation Ê of Ê the Ê
visualizations Êwould Êbe Êsimplifiedus Êing Êthis Êsystem. Ê
Conclusion Ê
The Êproject Êstarted Êoff Êwith Êan Êobjective Êat Êhand Êand Êan Êidea Êthat Êneeded Êto Êbe Ê
implemented. Ê The Ê objective Ê to Ê visuali ze Ê the Ê data Ê in Ê a Ê manner Ê that Ê is Ê
informative Êand Êyet Êeasy Êto Êuse Êfor Êusers Êand Êthat Êthe Êresearchers Êwho Êare Ê
willing Ê to Ê perform Ê further Ê work Ê using Ê the Ê data Ê in Ê the Ê SUPERFAMILY Ê
database Êare Êable Êto Êdo Êso Êeasily, Êboth Êof Êthese Êobjectives Êwere Êm Ê et.
 Ê
Moreover, ÊThe Êobjectives Êof Êvisualization Êin Êbioinformatics Êwere Êalso Êmet. ÊAs Ê
the Êsystem Êdeveloped Êenables Êuser Êto Êview Êlarge Êamount Êof Êinformation Êin Êa Ê
clear Êand Êeffective Êmanner Êand Êallows Êpatterns Êand Êtrends Êto Êbge Ê nized reco, Êit Ê
even Êsupports Êmultiple Êvisualizatio Ên options Êto Êaid Êin Êpattern Ê recognition. Ê
 Ê
The Êsystem Êdeveloped Êcan Êbe Êimproved Êas Êthe Êevaluatres ioult n Ês Êsuggest Êthat Ê
improvements Êcan Êbe Êmade Êand Êhence Êthere Êis Êscope Êfor Êfuture Êwork Êin Êthis Ê
project. Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 52 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Future ÊWork Ê
Data Êvisualization Êhas Êa Êvast Êscope; Êit Êoist Ê Êlim n ited Êto Êthe Êdata Êconsidered Êin Ê
this Êproject Êor Êeven Êthe Êtechnology. ÊData Êcan Êbe Êrepresented Êin Êa Êmany Êways. Ê
The Êway Êit Êhas Êbeen Êrepresented Êin Êthis Êproject Êis Êmeaningful Êfor Êthis Êtype Êof Ê
data Êbut Êthe Êthere Êare Êmany Êpossibilities. ÊImagination Êis Êim the Ê it Êlto Êdata Ê
visualization. Ê If Ê you Ê can Ê imagine Ê the Ê data Ê meaning lyful Êyou Ê can Ê try Ê to Ê
visualize Êthe Êdata Êin Êthe Êsame Êmanner. ÊIt Êmight Ênot Êbe Êpossible Ê , Êdue Ê nowto Ê
limitation Êof Êthe Êtechnology Êb Êut it Êwill Êbe Êsome Êday Ê[29] . Ê
 Ê
The Ê implementation Ê in Ê this Ê project Êash Ê been Ê focused Ê on Ê the Ê data Ê in Ê the Ê
superfamily Ê database. Ê Further Ê improvements Ê can Ê be Ê m,ad Êas e Ê from Ê the Ê
evaluation Êwe Êget Êa Êlot Êmore Êinsight Êon Êwhat Êcould Êbe Êa Êsbyet sttem er Ê. ÊAs Ê
results Êindicate Êthat Êsome Êpeople Êwould Êprefer Êold Êvisualization Êrather Êthan Ê
new. ÊThe Êsystem Êcan Êmaintain Êboth Êthe Êvisualizations Êto Êrectify Êthis Êproblem Ê
or Êthe Êold Êvisualization Êcan Êbe Êimproved Êto Êprovide Êsimilar Êfunctionalit Ê ies.
Most Êof Êthe Êpeople Êwere Êsatisfied Êwith Êthe Êfact Êthat Êno Êinformation Êwas Êlost Êin Ê
the Êvisualization Êbut Êt Êoimprove Ê3D Êbased Êvisualization Êcould Êbe Êused Êto Ê
provide Êmore Êinsight Êto Êthe Êdat Êa.
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 53 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Glossary Ê
 Ê
Word Ê Definition Ê
Superfamily Ê Database Êwith Êthe Êrequired Êinformatio Ên.
Database Ê
Biologist Ê A Êperson Êlooking Êto Êview Êthe Êdata Êon Êthe Êweb Êpage.
Researcher Ê A Êperson Êwho Êwants Êto Êget Êthe Êdata Êfrom Êthe Êdatabase Ê
and Êprocess Êit Êfurther. Ê
Web ÊService Ê A Ê service Ê provided Ê to Ê give Ê the Ê researcher Ê data Ê in Ê a Ê
standard Êformat Ê.
N-???tier ÊArchitecture Ê A Êtiered Êapproach Êto Êdeveloping Êthe Êsystem, Êkeeping Êin Ê
mind Êthat Êt he Êsystem Êmight Êbe Êextended Ê .
IV Ê Information ÊVisualization Ê
Rendering Ê Showing Êthe Êdata Êon Êthe Êscreen Ê
Data ÊMapping Ê To Êmatch Êthe Êdata Êwith Êvisualization Êtools/shap Êes
Data Êacquisition Ê To Êget Êthe Êdata Êrequested Êby Êthe Êus Ê er
Bioinformatics Ê Combination Êof Êbioolgy Êand Êcomputer Êscienc Êe
DAO Ê Data Ê Access Ê Object, Ê used Ê to Ê get Ê information Ê from Ê the Ê
database. Ê
BL Ê Business ÊLogic, Êan Êimportant Êpart Êof Êsoftware Êarchitect Êure.
User Ê Biologist Êand/or ÊResearche Êr
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 54 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
References Ê
1.Fu, ÊChen, ÊRyder, ÊBarbara. ÊG., ÊM anio lva, ÊAna, Ê& ÊWonnacott, ÊDavid Ê(2004). ÊÔTesting Ê
of Ê java Ê web Ê services Ê for Ê robustnessPr Õ. Êoceedings Ê of Ê the Ê 2004 Ê ACM Ê SIGSOFT Ê
international Êsymposium Êon ÊSoftware Êtesting Êand Êanaly-???s ÊIS is ÊSTA ÊÕ04. Ê
2.Lord, ÊPhilip, ÊBechhofer, ÊSean, ÊWilkinson, ÊMark ÊD., ÊSchiltz,ry Ê,G ÊaGessler, ÊDamian, Ê
Hull, Ê Duncan, Ê Goble, Ê Carole, Ê Stein, Ê Lincoln Ê (2004) Ê ÔApplying Ê Semantic Ê Web Ê
Services Êto ÊBioinformatics: ÊExperiences ÊGained, ÊLessons ÊLearnt.Õ ÊFrom ÊISWC Ê2004, Ê
Bioinformatics, Ê350-???364. Ê
3. Ê Boehm, Ê Boehm. Ê W. Ê (1988). Ê ÔA Ê spiral Ê model Ê of Ê soft Êwde arveelopment Ê and Ê
enhancementÕ. ÊIEEE ÊComputer ÊJournal, Êvolume Ê2 Ê61 1,-???72. Ê
4. Ê Londoninternational.ac.uk Ê ÔSoftware Ê Engineering: Ê Principles Ê and Ê ModelsÕ, Ê
Available Ê from Ê
http://www.londoninternational.ac.uk/current_students/programme_resources/cis/
pdfs/subject_guides/level_2/cis210_vol1/software_eng_chp3.pdf Ê[Accessed Ê3rdJu Êly Ê
2011] Ê
5. Ê Bhalla, Ê Nishchal, Ê & Ê Kazerooni, Ê Sahba Ê (2007). Ê ÔWeb Ê Services Ê VulnerabilitiesÕ Ê a Ê
White ÊPaper Êby ÊSecurity ÊCompa Êss
6. ÊGregory ÊMurray Êand ÊJennifer ÊBall, ÊOracle.com Ê ÊÔIncluding ÊAjax ÊFon uanlcittiy Êin Êa Ê
Custom Ê Ê Ê Ê JavaServer Ê Faces Ê ComponentÕ, Ê Available Ê from Ê
http://www.oracle.com/technetwork/java/javaee/tutorial-???jsp-???140089.html Ê[Accessed Ê
th
5 ÊJuly Ê2011] Ê
7. ÊLori ÊMacVittie Ê(2007) ÊÔThe ÊImpact Êof ÊAJAX Êon Êthe ÊNetworkÕ. ÊA ÊWhite ÊPaper Êby ÊF5 Ê
Networks, ÊInc. Ê
8. ÊTodd ÊAnglin, ÊÔThe ÊAJAX ÊPapers ÊPart ÊIII: ÊWhy, ÊWhen, Êand ÊWhTe atÕl Êe Êrb iky. Ê Ê
9. ÊBrennan ÊSpies, ÊAjaxonomy.com Ê(2008) ÊÔWeb ÊServices, ÊPart Ê1: ÊSOAP Êvs. ÊRESTÕ, Ê
Available Êfrom Êhttp://www.ajaxonomy.com/2008/xml/we-??? bservices-???part-???1-???soap-???vs-???
st
rest Ê[Accessed Ê1 ÊJuly Ê2011] Ê
10. Ê Julian Ê Gough, Ê (2002) Ê ÔThe Ê SUPERFAMILY Ê database Ê in Ê structural Ê genomicsÕ Ê
Biological ÊCrystallography, ÊISSN Ê090-???74449 Ê
11. Ê Supfam.org Ê (2008) Ê ÔSuperfamilyÕ, Ê Available Ê from Ê http://www.supfam.org Ê
rd
[Accessed Ê3 ÊJuly ÊMay Ê2011] Ê
12. ÊNicolas ÊGarcia ÊBelmote n, Êthejit.org ÊÔJavaScript ÊInfoVis ÊToolkitÕ, ÊAvailable Êfrom Ê
st
http://www.thejit.org Ê[Accessed Ê 1 ÊJuly Ê2011] Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 55 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
13. Ê W3C, Ê W3.org Ê ÔSimple Ê Object Ê Access Ê Protocol Ê (SOAP)Õ, Ê Available Ê from Ê
th
http://www.w3.org/TR/2000/NOTE-???SOAP-???20000508/ Ê[Accessed15 Ê ÊAugust Ê2011] Ê
14. ÊW3C, Ê W3.org Ê ÔWeb Ê Services Ê Description Ê Language Ê (WSDL)Õ, Ê Available Ê from Ê
th
http://www.w3.org/TR/2001/NOTE-???wsdl-???20010315 Ê[Accessed15 Ê ÊAugust Ê2011] Ê
15. Ê Supfam.org Ê (2008) Ê ÔSUPERFAMILY Ê Web Ê ServicesÕ, Ê Available Ê from Ê
th
http://supfam.org/SUPERFAMILY/web_services.html Ê[Accessed Ê19 ÊAugust Ê2011] Ê
16. ÊPressman ÊR. ÊS., Ê(2000). ÊÔSoftware ÊEngineeri-???n ÊgA Ê Ê Practitioner'?s ÊApproachÕ, Ê5th Ê
Edition, ÊEuropean ÊAdaptation, ÊMcGraw ÊHill, Ê-???40. 26 Ê
17. Ê Eclipse, Ê eclipse.org Ê (2011) Ê ÔEclipse Ê DownloadsÕ, Ê Available Ê from Ê
th
http://eclipse.org/downloads/ Ê[Accessed15 Ê ÊAugust Ê2011] Ê
18. Ê JavaScript Ê InfoVis Ê Toolki Êt,simplecomplexity.net Ê (2009) Ê ÔInteractive Ê Data Ê
Visualizations Êfor Êthe ÊWebÕ, ÊAvailable Êfrom Êhttp://simplecomplexity.net/javasc-???ript
th
infovis-???toolkit/ Ê[Accessed19 Ê ÊAugust Ê2011] Ê
19. ÊRaccoon, ÊL. Ê. Ê BS. Ê(1997). ÊFifty Êyears Êof Êprogress Êin Êsoftware Êengineering. ÊACM Ê
SIGSOFT ÊSoftware ÊEngineering ÊNotes, Ê22(1), Ê-???104. 88 Ê
20.Yu, ÊQ., ÊLiu, ÊX., ÊBouguettaya, ÊA., Ê& ÊMedjahed, ÊB. Ê(2006). ÊDeploying Êand Êmanaging Ê
Web Êservices: Êissues, Êsolutions, Êand Êdirections. ÊThe ÊV B ÊLJDournal, Ê17(3), Ê53-???572. 7 Ê
21. ÊPautasso, ÊC., Ê& ÊLeymann, ÊF. Ê(2008). ÊRESTful ÊWeb ÊServices Êvs Ê. ÊÒBigÓ ÊWeb ÊServices Ê
: ÊMaking Êthe ÊRight ÊArchitectural ÊDecision ÊCategories Êand ÊSubject ÊDescripWWW Ê tors. Ê
'?08, ÊProceeding Êof Êthe Ê17th Êinternational Êconference Êon ÊWoWi rld Ê de ÊWeb. Ê
 Ê
22. ÊProtovis, ÊStanford.edu ÊÔa Êgrapichal Êapproach Êto Êvisualization , ÊÕAvailable Êfrom Ê
th
http://vis.stanford.edu/protovis/ Ê[Accessed Ê 19 ÊAugust Ê2011] Ê
 Ê
23.Miriah Ê Meyer Ê (March,2001), Ê TEDx Ê Waterloo, Ê Available Ê from Ê
http://www.experiencefestival.com/wp/videos/tedxwaterloo-???-??? miriah-???meyer-???-???
th
information-???visualization-???for-???scientific-???discovery/Sua0xDCf8MA Ê [Accessed Ê 5 Ê
September Ê2011] Ê
 Ê
24. ÊYing ÊTao, ÊYang ÊLiu, ÊCarol ÊFriedman, Êand ÊYves ÊA. ÊLussier Ê(20In 04fo).r ÊmÒation Ê
Visualization Ê Techniques Ê in Ê Bioinformatics Ê durg Ê in the Ê Postgenomic Ê ErÓ.a ÊDrug Ê
Discov ÊToday ÊBiosilico. Ê2004 ÊNovember; Ê2(6): ÊÐ2245. 37 Ê
 Ê
25.Erin Ê Cavanaugh. ÊÒWeb Ê services: Ê Benefits, Ê challenges, Ê and Ê a Ê unique, Ê visual Ê
th
development ÊsolutionÓ, ÊAltova, ÊInc Ê[Accessed Ê19 ÊAugust Ê2011] Ê
 Ê
26. ÊJoseph ÊMiller Ê,ÓData ÊVisuliz a ation ÊTool: ÊInformation Êas ÊFast Êas Êthe ÊImaginationÒ. Ê
Available Êfrom Êhttp://www.onlinesoftwareguide.com/0605datavisual.html Ê[Accessed Ê
th
8 ÊSeptember Ê2011] Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 56 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
27.Stephen ÊFew Ê(2007), ÊÒData ÊVisualization ÊPast, ÊPresent, ÊAnd ÊFutureÓ, ÊAvailable Ê
from Ê http://www.perceptualedge.com/articles/Whitepapers/Data_Visualization.pdf Ê
th
[Accessed Ê9 ÊSeptember Ê2011] Ê
 Ê
28.Yen, ÊG. ÊG., Ê& ÊWu, ÊZ. Ê(2008). ÊRanked Êcentroid Êprojection: Êa Êdata Êvisualization Ê
approach Ê with Ê sel-???forganizing Ê maps. ÊIEEE Ê transactions Ê on Ê neural Ê networks Ê / Ê a Ê
publication Ê of Ê the Ê IEEE Ê Neural Ê Networks Ê Coun , Êcil19(2), Ê 245-???59. Ê doi: Ê
10.1109/TNN.2007.905858. Ê
 Ê
29.Lang ÊU, Êet Êal. ÊVisualizatio -???re nlated Êmetadata. ÊData ÊIssues Êfor ÊData ÊVisualization Ê
IEEE ÊVisualization Ê'?95 ÊWorkshop; Êpp. ÊÐ234. 6 Ê
 Ê
30.All-???about-???psychology.com, Ê Gestalt Ê psychology Ê Article: Ê "?Patterns"? Ê The Ê New Ê
Psychology, Ê Available Ê from Ê http://www.all-???about-???psychology.com/gestalt-???
th
psychology.html Ê[Accessed Ê4 ÊSeptember Ê2011] Ê
 Ê
31.Andreas ÊPrli?, ÊThomas ÊA ÊDown, ÊEugene ÊKulesha, ÊRobert ÊD ÊFinn, ÊAndr ?ha ea ?ri s Ê ÊKa
and ÊTim ÊJP ÊH ubbard Ê(2007), ÊIntegrating Êsequence Êand Êstructural Êbiology Êwith Ê, Ê DAS
BMC ÊBioinformatics ÊAvailable Êform Êhttp://www.biomedcentral.com/1471-???2105/8/333 Ê
th
[Accessed Ê7 ÊSeptember Ê2011] Ê
 Ê
32.Madera, ÊM., ÊVogel, ÊC., ÊKummerfeld, ÊS. ÊK., ÊChothia, ÊC., Ê& ÊGough, ÊJ.. Ê Ê(T2h00e Ê4)
SUPERFAMILY Ê database Ê in Ê 2004: Ê additions Ê and Ê improvements. Ê Nucleic Ê acids Ê
research, Ê32(Database Êissue), ÊD23-???59. Ê
 Ê
33.DePual Ê University,Gestalt Ê PrinciplesAv , ailable Ê from Ê
th
http://facweb.cs.depaul.edu/sgrais/gestalt_principles.htm Ê[Accessed Ê5 ÊSeptember Ê
2011] Ê
 Ê
34. ÊLisa Ê Graham Ê (2008),Ge Ê stalt Ê Theory Ê in Ê Interactive Ê Media Ê Desi, ÊgJo nurnal Êof Ê
humanities Êand ÊSocial ÊSciences ÊVolume Ê2, ÊIssue Ê2008 Ê1, Ê
 Ê
th
35.GMOD, ÊGBrowse, ÊAvailable Êfrom Êhttp://gmod.org/wiki/GBrowse Ê[Accessed Ê18 Ê
September Ê2011] Ê
 Ê
36.Hogeweg, Ê P. Ê (2011. Ê ) The Ê roots Ê of Ê bioinformatics Ê in Ê theoretical Ê biolog PL y. Ê oS Ê
computational Êbiology, Ê7(3), Êe1002021. Êdoi: Ê10.1371/journal.pcbi.100202 Ê1.
 Ê
37.Cha, ÊS-??? .jun, ÊHwang, ÊY-???.young, ÊChang, ÊY-???.seop, ÊKim, ÊK-???.ok, Ê& ÊLee, ÊK -???ch . ul. Ê(2007). Ê
The ÊPerformance ÊEvaluations Êand ÊEnha ncements Êof ÊGIS ÊWeb ÊServices ÊVariants Êfor Ê
GIS ÊWeb ÊServicesEv . Ê aluation. Ê
 Ê
38.Taverna, ÊmyGrid ÊProject ÊAvailable Êfrom ht Êtp://www.taverna.org.uk/ Ê[Accessed Ê
th
20 ÊSeptember Ê2011] Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 57 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Image ÊSources Ê:
 Ê
1. Êhttp://supfam.cs.bris.ac.uk/SUPERFAMILY/cgi-???bin/taxviz.cgi Ê
 Ê
2.http://www.pantherdb.org/chart/summary/pantherChart.jsp?filterLevel=1&chartTy
pe=1&listType=1&type=4&species=Homo%20sapiens Ê
 Ê
3.http://www.pantherdb.org/chart/summary/pantherChart.jsp?filterLevel=1&chartTy
pe=1&listType=1&type=5&section=PC00204&species=Homo%20sapiens&level2=PC0
0191&level1=PC00095 Ê
 Ê
4. Êhttp://supfam.cs.bris.ac.uk/SUPERFAMILY/pics/database_schema_1_75.png Ê
 Ê
5.http://supfam.cs.bris.ac.uk/SUPERFAMILY/cgi-???
bin/allcombs.cgi?comb=54452,48726,_gap_ Ê
 Ê
6.http://www.oracle.com/technetwork/java/javaee/tutorial-???jsp-???140089.html Ê
 Ê
7.http://www.experiencefestival.com/wp/videos/tedxwaterloo-???-??? miriah-???meyer-???-???
information-???visualization-???for-???scientific-???discovery/Sua0xDCf8MA Ê
 Ê
8. Êhttp://www.thejit.org Ê
 Ê
9. Êhttp://vis.stanford.edu/protovis/ Ê
 Ê Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 58 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
Appendix Ê
Functionality Êavailable Êi n ÊWeb ÊService Ê
The Êavailable Êfunctionalities Êwithin Êthe Êweb Êservice Êare Êlisted Êb Êelow.
 Ê
getPorteinBySeqId Ê
public Êintg ÊetPorteinBySeqId(java.lang.String ÊseqId) Ê
 Ê
 Ê
getAssByProteinId Ê
public Êjava.lang.String[] Ê getAssByProteinId(int ÊproteinId) Ê
 Ê
 Ê
getCombinationByTaxonomyAndProteinId Ê
public Ê java.lang.String[] Ê getCombinationByTaxonomyAndProteinId(int Ê
proteinId, Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê java.lang.String Êtaxonomy) Ê
 Ê
 Ê
getCombinationByProteinId Ê
public Êjava.lang.String[] Ê getCombinationByProteinId(int ÊproteinId) Ê
 Ê
 Ê
getOrderByProteinId Ê
public Êjava.lang.String[] Ê getOrderByProteinId(java.lang.String Êtaxonomy) Ê
 Ê
 Ê
getNameByTaxonId Ê
public Êjava.lang.Stringg ÊetNameByTaxonId(int ÊtaxonId) Ê
 Ê
 Ê
getTaxonIdByLeftId Ê
public Êintg ÊetTaxonIdByLeftId(int ÊleftId) Ê
 Ê
 Ê
getCombinationByComidandTaxonomy Ê
public Ê java.lang.String[] Ê getCombinationByComidandTaxonomy(int Ê
combId, Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê java.lang.String Êtaxonomy) Ê
 Ê
 Ê
getCombinationByCombId Ê
public Êjava.lang.String[] Ê getCombinationByCombId(int ÊcombId) Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 59 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
 Ê
 Ê
getChildrenByNodeId Ê
public Êjava.lang.Integer[] Ê getChildrenByNodeId(int ÊNodeId) Ê
 Ê
 Ê
getRightIdByLeftId Ê
public Êintg ÊetRightIdByLeftId(int ÊNodeId) Ê
 Ê
 Ê
getTaxonIdByNodeId Ê
public Êintg ÊetTaxonIdByNodeId(int ÊNodeId) Ê
 Ê
 Ê
getLeftIdByRightId Ê
public Êintg ÊetLeftIdByRightId(int ÊNodeId) Ê
 Ê
 Ê
These Êshow Êthe Êfunctionality Êavailable Êin Êthe Êweb Êservice Êand he Ê Êptarameter Ê
they Êtake Êas Êinput Êand Êeven Êthe Êdata Êtype Êof Êthe Êvalue Êret Êurned.
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 60 ÊWeb ÊServices Êand ÊData ÊVisualization Êin Êthe ÊBrow Êser
User ÊManual Ê
This Êmanual Êwill Êallow Êresearcher s Êto Êconnect Êto Êthe Êweb Êservice, Êin Êthis Ê
manual ÊI Êwill Êdiscuss Êhow Êweb Êservice Êcan Êbe Êused Êthrough Êjava. ÊIt Êcan Êbe Ê
used Êon Êother Êplatforms Êas Êwell Êbutis Ê Êtm hanual Êwill Êfocus Êon Êusing Êit Êwith Ê
java. Ê Ê
 Ê
1. First Êstep Êis Êto Êcreate Êa Êjava Êapplicat Êion
2. Import Êthe ÊAxsi Êjar Êfiles Êavailable Êfrom ÊInternet Ê .
3. Now Êto Êcall Êthe Êweb Êservice, Êwrite Êthe Êcode Êbelow Êin Êyour Êm Êethod.
 Ê
try Ê Ê
{ Ê
 Ê
String Êendpoint Ê="?URL Ê"?;
 Ê Ê Ê Ê
Service Ê Êservice Ê= Ênew ÊService(); Ê
Call Ê Ê Ê Ê Êcall Ê Ê Ê Ê= Ê(Call) Êservice.createCall(); Ê
 Ê Ê Ê Ê
call.setTargetEndpointAddress( Ênew Êjava.net.URL(endpoint) Ê); Ê
call.setOperationName(new Ê QName("?http://soapinterop.org/"?,"?Method Ê
Name"?)); Ê
String Êret Ê= Ê(String) Êcall.invoke( Ênew ÊObject[] Ê{ ÊParamter Ê1, ÊParameter Ê2 Ê} Ê); Ê
 Ê Ê Ê Ê
System.out.println("?Reply Êwas Ê'?"? ret Ê+ Ê Ê+ Ê"?'?"? Ê);
} Ê Ê
catch Ê(Exception Êe) Ê
{ Ê
System.err.println(e.toString()); Ê
} Ê
 Ê
Replace ÊURL Êwith Êthe ÊURL Êof Êthe Êserv Êice.
Replace ÊMethod ÊName Êwith Êthe Êname Êof Êthe Êmethod Êyou Êwish Êt Êo Êcall
Replace ÊParameter Ê1, ÊParameter Ê2 Êwith Êthe Êvalues Êthat Êmatch Êthe Êm Ê Ê Ê Ê Ê Ê ethod Ê
being Êcalled Ê.
Ret Êwill Êhold Êthe Êresult Ê .
This Êis Êa Êbasic Êmanual Êt enab o Ê le Êthe Êuser Êto Êuse Êthe Ê web Êservice. Ê
 Ê
 Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê University Êof ÊBristo-??? l Ê ÊComputer ÊScience Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê Ê 61 Ê